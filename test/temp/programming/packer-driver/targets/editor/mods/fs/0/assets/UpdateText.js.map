{"version":3,"sources":["file:///Users/edz/work/creatorproject/3.3.1/test/assets/UpdateText.ts"],"names":["_decorator","Component","Label","ccclass","property","UpdateText","type","start","update","dt","onClickThis","event","console","log"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;4BAGjBK,U,WADZF,OAAO,CAAC,YAAD,C,UAENC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEJ;AAAR,OAAD,C,oCAFV,MACaG,UADb,SACgCJ,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA,8CAIpB,CAJoB;AAAA;;AAKzCM,QAAAA,KAAK,GAAG,CAED;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEDC,QAAAA,MAAM,CAACC,EAAD,EAAa,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEDC,QAAAA,WAAW,CAACC,KAAD,EAAoB;AAC9BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;;AA9CwC,O;;;;;iBAEjB,I","sourcesContent":["import { _decorator, Component, Node, Label, Color, color, UI, EventTouch } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"UpdateText\")\r\nexport class UpdateText extends Component {\r\n\t@property({ type: Label })\r\n\tprivate _label: Label = null!;\r\n\r\n\t_deltaTime: number = 0;\r\n\tstart() {\r\n\r\n        // let mapYangtianchao:Map<number, number> =new  Map();\r\n\t\t// this._label = this.node.getChildByName(\"_label\").getComponent(Label);\r\n\t\t// let shareLabelInfo = LabelPlus.Assembler.getAssembler(this._label)._getShareLabelInfo();\r\n\t\t// this.scheduleOnce(() => {\r\n\t\t// \tconsole.log(shareLabelInfo); //.fontAtlas.clearAllCache()\r\n\t\t// }, 1);\r\n\t\t// this.scheduleOnce(() => {\r\n\t\t// \t// this._label.string = \"\";\r\n\t\t// \tshareLabelInfo.fontAtlas.reset();\r\n\t\t// \tconsole.log(shareLabelInfo.fontAtlas._nextY, shareLabelInfo.fontAtlas._x, shareLabelInfo.fontAtlas._y); //.fontAtlas.clearAllCache()\r\n\t\t// }, 2);\r\n\t\t// this.scheduleOnce(() => {\r\n\t\t// \tthis._label.string = \"saxsaxasxasxasxasxasxasxasx\";\r\n\t\t// }, 3);\r\n\t\t// this.scheduleOnce(() => {\r\n\t\t// \tthis._label.string = \"\";\r\n\t\t// \tshareLabelInfo.fontAtlas.reset();\r\n\t\t// \tconsole.log(shareLabelInfo.fontAtlas._nextY, shareLabelInfo.fontAtlas._x, shareLabelInfo.fontAtlas._y); //.fontAtlas.clearAllCache()\r\n\t\t// }, 5);\r\n\t\t// this.scheduleOnce(() => {\r\n\t\t// \tthis._label.string = \"这是另一个文本，请看一下\";\r\n\t\t// }, 7);\r\n\t\t// console.log(this._label.color.a);\r\n\t\t// this._label.color = new Color(255,255,255,122)\r\n\t\t// console.log(this._label.color.a);   updateRenderData\r\n\t\t// [3]\r\n\t}\r\n\r\n\tupdate(dt: number) {\r\n\t\t// if (this._deltaTime > 5) return;\r\n\t\t// console.log(this._deltaTime);\r\n\t\t// this._deltaTime += dt;\r\n\t\t// this._label.string = text_list[Math.floor(this._deltaTime % 4)];\r\n\t\t// this._label.fontSize = Math.floor(Math.random() * 20 + 10);\r\n\t\t// this._label.color = color(Math.random() * 255, Math.random() * 255, Math.random() * 255, 255);\r\n\t}\r\n\r\n\tonClickThis(event: EventTouch) {\r\n\t\tconsole.log(event);\r\n\t}\r\n}\r\n"]}