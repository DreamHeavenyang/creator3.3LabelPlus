{"version":3,"sources":["file:///Users/edz/work/creatorproject/3.3.1/test/assets/test_ytc/src/common/base/ui/ScrollListItem.ts"],"names":["_decorator","Button","Component","Enum","EventHandler","Node","Sprite","SpriteFrame","tween","Tween","UITransform","Vec3","DEV","ccclass","property","disallowMultiple","menu","executionOrder","LayerType","SelectedType","ScrollListItem","type","tooltip","visible","contentLayerType","SLICE","selectedMode","NONE","SWITCH","selected","_selected","val","selectedFlag","TOGGLE","active","sp","getComponent","spriteFrame","selectedSpriteFrame","_unselectedSpriteFrame","btnCom","_btnCom","node","onLoad","com","onDestroy","off","EventType","SIZE_CHANGED","_onSizeChange","_registerEvent","_eventReg","list","clickEvents","unshift","createEvt","adaptiveSize","on","_onItemAdaptive","component","handlerName","isValid","name","match","pop","replace","evt","target","handler","showAni","aniType","callFunc","del","t","twe","ut","to","scale","by","position","height","width","call","_delSingleItem","n","displayData","length","id","listId","splice","start","onClickThis","selectedId"],"mappings":"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","sourcesContent":["/******************************************\n * @author kL <klk0@qq.com>\n * @date 2019/12/9\n * @doc 列表Item组件.\n * 说明：\n *      1、此组件须配合List组件使用。（配套的配套的..）\n * @end\n ******************************************/\n const {ccclass, property, disallowMultiple, menu, executionOrder} = _decorator;\n import {\n     _decorator,\n     Button,\n     Component,\n     Enum,\n     EventHandler,\n     Node,\n     Sprite,\n     SpriteFrame,\n     tween,\n     Tween,\n     UITransform,\n     Vec3\n } from 'cc';\n import {DEV} from 'cc/env';\n import ScrollList from './ScrollList';\n enum LayerType {\n     /** 不分层 */\n     NONE,\n     /** 分层 */\n     SLICE,\n }\n enum SelectedType {\n     NONE = 0,\n     TOGGLE = 1,\n     SWITCH = 2,\n }\n\n @ccclass\n @disallowMultiple()\n @menu('组件库/ScrollListItem')\n @executionOrder(-5001)          //先于List\n export default class ScrollListItem extends Component {\n     @property({ type: Enum(LayerType), tooltip: \"是否分层渲染\" })\n     public contentLayerType: LayerType = LayerType.NONE;\n     @property({\n         type: [Node],\n         tooltip: \"列表除主容器外的其他容器\\n需要分层显示时使用，一般用于降低draw call\",\n         visible() {\n             return this.contentLayerType === LayerType.SLICE;\n         },\n     })\n     public layerNodeList: Node[] = [];\n     //选择模式\n     @property({\n         type: Enum(SelectedType),\n         tooltip: DEV && '选择模式'\n     })\n     selectedMode: SelectedType = SelectedType.NONE;\n     //被选标志\n     @property({\n         type: Node, tooltip: DEV && '被选标识',\n         visible() {\n             return this.selectedMode > SelectedType.NONE;\n         }\n     })\n     selectedFlag: Node = null;\n     //被选择的SpriteFrame\n     @property({\n         type: SpriteFrame, tooltip: DEV && '被选择的SpriteFrame',\n         visible() {\n             return this.selectedMode == SelectedType.SWITCH;\n         }\n     })\n     selectedSpriteFrame: SpriteFrame = null!;\n     //未被选择的SpriteFrame\n     _unselectedSpriteFrame: SpriteFrame = null!;\n     //自适应尺寸\n     @property({\n         tooltip: DEV && '自适应尺寸（宽或高）',\n     })\n     adaptiveSize: boolean = false;\n     //依赖的List组件\n     public list: ScrollList;\n     //序列id\n     public listId: number;\n     //是否已经注册过事件\n     private _eventReg = false;\n \n     //选择\n     _selected: boolean = false;\n \n     get selected() {\n         return this._selected;\n     }\n \n     set selected(val: boolean) {\n         this._selected = val;\n         Tween;\n         if (!this.selectedFlag)\n             return;\n         switch (this.selectedMode) {\n             case SelectedType.TOGGLE:\n                 this.selectedFlag.active = val;\n                 break;\n             case SelectedType.SWITCH:\n                 let sp: Sprite = this.selectedFlag.getComponent(Sprite);\n                 if (sp) {\n                     sp.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\n                 }\n                 break;\n         }\n     }\n \n     //按钮组件\n     private _btnCom: any;\n \n     get btnCom() {\n         if (!this._btnCom)\n             this._btnCom = this.node.getComponent(Button);\n         return this._btnCom;\n     }\n \n     onLoad() {\n         // //没有按钮组件的话，selectedFlag无效\n         // if (!this.btnCom)\n         //     this.selectedMode == SelectedType.NONE;\n         //有选择模式时，保存相应的东西\n         if (this.selectedMode == SelectedType.SWITCH) {\n             let com: Sprite = this.selectedFlag.getComponent(Sprite);\n             this._unselectedSpriteFrame = com.spriteFrame;\n         }\n     }\n \n     onDestroy() {\n         this.node.off(Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\n     }\n \n     _registerEvent() {\n         if (!this._eventReg) {\n             if (this.btnCom && this.list.selectedMode > 0) {\n                 this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\n             }\n             if (this.adaptiveSize) {\n                 this.node.on(Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\n             }\n             this._eventReg = true;\n         }\n     }\n \n     _onSizeChange() {\n         this.list._onItemAdaptive(this.node);\n     }\n \n     /**\n      * 创建事件\n      * @param {cc.Component} component 组件脚本\n      * @param {string} handlerName 触发函数名称\n      * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\n      * @returns cc.Component.EventHandler\n      */\n     createEvt(component: Component, handlerName: string, node: Node = null) {\n         if (!component.isValid)\n             return;//有些异步加载的，节点以及销毁了。\n         component['comName'] = component['comName'] || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\n         let evt = new EventHandler();\n         evt.target = node || component.node;\n         evt.component = component['comName'];\n         evt.handler = handlerName;\n         return evt;\n     }\n \n     showAni(aniType: number, callFunc: Function, del: boolean) {\n         let t: any = this;\n         let twe: Tween<Node>;\n         let ut: UITransform = t.node.getComponent(UITransform);\n         switch (aniType) {\n             case 0: //向上消失\n                 twe = tween(t.node)\n                     .to(.2, {scale: new Vec3(.7, .7, 1.0)})\n                     .by(.3, {position: new Vec3(0, ut.height * 2, 0)});\n                 break;\n             case 1: //向右消失\n                 twe = tween(t.node)\n                     .to(.2, {scale: new Vec3(.7, .7, 1.0)})\n                     .by(.3, {position: new Vec3(ut.width * 2, 0, 0)});\n                 break;\n             case 2: //向下消失\n                 twe = tween(t.node)\n                     .to(.2, {scale: new Vec3(.7, .7, 1.0)})\n                     .by(.3, {position: new Vec3(0, ut.height * -2, 0)});\n                 break;\n             case 3: //向左消失\n                 twe = tween(t.node)\n                     .to(.2, {scale: new Vec3(.7, .7, 1.0)})\n                     .by(.3, {position: new Vec3(ut.width * -2, 0, 0)});\n                 break;\n             default: //默认：缩小消失\n                 twe = tween(t.node)\n                     .to(.3, {scale: new Vec3(.1, .1, 1.0)});\n                 break;\n         }\n \n         if (callFunc || del) {\n             twe.call(() => {\n                 if (del) {\n                     t.list._delSingleItem(t.node);\n                     for (let n: number = t.list.displayData.length - 1; n >= 0; n--) {\n                         if (t.list.displayData[n].id === t.listId) {\n                             t.list.displayData.splice(n, 1);\n                             break;\n                         }\n                     }\n                 }\n                 callFunc();\n             });\n         }\n         twe.start();\n     }\n \n     onClickThis() {\n         this.list.selectedId = this.listId;\n     }\n \n }\n "]}