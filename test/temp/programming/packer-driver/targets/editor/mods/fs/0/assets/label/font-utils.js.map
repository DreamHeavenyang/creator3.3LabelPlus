{"version":3,"sources":["file:///Users/edz/work/creatorproject/3.3.1/test/assets/label/font-utils.ts"],"names":["CanvasPool","FontLetterDefinition","LetterTexture","LetterRenderTexture","LetterAtlas","BufferTextureCopy","Offset","Extent","TextureSubresLayers","FontAtlas","computeHash","labelInfo","hashData","color","toHEX","out","isOutlined","margin","fontSize","fontFamily","BASELINE_RATIO","Color","director","Director","getBaselineOffset","ImageAsset","js","macro","MIDDLE_RATIO","safeMeasureText","Texture2D","warnID","getInstance","_canvasPool","get","data","pool","pop","canvas","document","createElement","context","getContext","put","length","MAX_LABEL_CANVAS_POOL_SIZE","push","WHITE","clone","space","bleed","_backgroundStyle","toFixed","BASELINE_OFFSET","constructor","char","hash","charCodeAt","updateRenderData","_updateProperties","_updateTexture","destroy","image","font","fontDesc","width","blank","parseFloat","height","offsetY","reset","textAlign","textBaseline","clearRect","fillStyle","fillRect","startX","startY","lineJoin","r","g","b","strokeColor","strokeStyle","a","lineWidth","strokeText","fillText","PixelFormat","RGBA8888","initWithSize","format","drawTextureAt","x","y","gfxTexture","getGFXTexture","gfxDevice","_getGFXDevice","console","warn","region","texOffset","texExtent","copyTexImagesToTexture","ECharCacheType","_width","_height","normal","fontDefDictionary","Map","key","texture","set","Number","_halfBleed","on","EVENT_BEFORE_SCENE_LAUNCH","beforeSceneLoad","insertLetterTexture","letterTexture","charCacheType","device","root","has","_x","_y","_nextY","_dirty","letterDefinition","u","v","valid","w","h","xAdvance","addLetterDefinitions","update","value","values","clear","getTexture","_charCacheType","clearAllCache","getLetter","letterDefinitions","getLetterDefinitionForChar","letter","temp","shareLabelInfo","fontAtlas","lineHeight","hAlign","vAlign","buffStride","buffTexHeight","texSubres","copy","info","z","depth","mipLevel","baseArrayLayer","layerCount","cloneLetterDefinition","copyLetterDefinitions","Object","keys","mixin","hasKey","hasOwnProperty"],"mappings":";;;wJAuCaA,U,EAiEPC,oB,EAeAC,a,EA+FOC,mB,EAmDAC,W,EA0NAC,iB,EAeAC,M,EAaAC,M,EAYAC,mB,EAaAC,S;;;;AAhEN,WAASC,WAAT,CAAqBC,SAArB,EAAgC;AACtC,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,KAAK,GAAGF,SAAS,CAACE,KAAV,CAAgBC,KAAhB,EAAd;AACA,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAIJ,SAAS,CAACK,UAAV,IAAwBL,SAAS,CAACM,MAAV,GAAmB,CAA/C,EAAkD;AACjDF,MAAAA,GAAG,GAAGA,GAAG,GAAGJ,SAAS,CAACM,MAAhB,GAAyBN,SAAS,CAACI,GAAV,CAAcD,KAAd,EAA/B;AACA;;AAED,WAAOF,QAAQ,GAAGD,SAAS,CAACO,QAArB,GAAgCP,SAAS,CAACQ,UAA1C,GAAuDN,KAAvD,GAA+DE,GAAtE;AACA;;;;;;iBATeL,W;;;;;;;;;;;;AA/bPU,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Q,OAAAA,Q;AAAiBC,MAAAA,iB,OAAAA,iB;AAAmBC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;;;;;;;4BAclI/B,U,GAAN,MAAMA,UAAN,CAAiB;AAAA;AAAA,wCAOW,EAPX;AAAA;;AACL,eAAXgC,WAAW,GAAe;AAChC,cAAI,CAACC,WAAL,EAAkB;AACjBA,YAAAA,WAAW,GAAG,IAAIjC,UAAJ,EAAd;AACA;;AACD,iBAAOiC,WAAP;AACA;;AAEMC,QAAAA,GAAG,GAAG;AACZ,cAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,GAAV,EAAX;;AAEA,cAAI,CAACF,IAAL,EAAW;AACV,kBAAMG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,kBAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACAP,YAAAA,IAAI,GAAG;AACNG,cAAAA,MADM;AAENG,cAAAA;AAFM,aAAP;AAIA;;AAED,iBAAON,IAAP;AACA;;AAEMQ,QAAAA,GAAG,CAACL,MAAD,EAA2B;AACpC,cAAI,KAAKF,IAAL,CAAUQ,MAAV,IAAoBjB,KAAK,CAACkB,0BAA9B,EAA0D;AACzD;AACA;;AACD,eAAKT,IAAL,CAAUU,IAAV,CAAeR,MAAf;AACA;;AA5BsB,O,GA+BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgBMS,MAAAA,K,GAAQ1B,KAAK,CAAC0B,KAAN,CAAYC,KAAZ,E;AACRC,MAAAA,K,GAAQ,C;AACRC,MAAAA,K,GAAQ,C;AAERjD,MAAAA,oB,GAAN,MAAMA,oBAAN,CAA2B;AAAA;AAAA,qCACf,CADe;;AAAA,qCAEf,CAFe;;AAAA,qCAGf,CAHe;;AAAA,qCAIf,CAJe;;AAAA,2CAKmB,IALnB;;AAAA,2CAMT,CANS;;AAAA,2CAOT,CAPS;;AAAA,yCAQX,KARW;;AAAA,4CASR,CATQ;AAAA;;AAAA,O;AAYrBkD,MAAAA,gB,GAAoB,uBAAsB,CAAC,IAAI,GAAL,EAAUC,OAAV,CAAkB,CAAlB,CAAqB,G;AAC/DC,MAAAA,e,GAAkB7B,iBAAiB,E;AAEnCtB,MAAAA,a,GAAN,MAAMA,aAAN,CAAoB;AAWnBoD,QAAAA,WAAW,CAACC,IAAD,EAAe5C,SAAf,EAAsC;AAAA,yCAVf,IAUe;;AAAA;;AAAA;;AAAA,wCAPV,IAOU;;AAAA,0CANP,IAMO;;AAAA,2CALC,IAKD;;AAAA,yCAJlC,CAIkC;;AAAA,0CAHjC,CAGiC;;AAAA,2CAFhC,CAEgC;;AAAA;;AAChD,eAAK4C,IAAL,GAAYA,IAAZ;AACA,eAAK5C,SAAL,GAAiBA,SAAjB;AACA,eAAK6C,IAAL,GAAYD,IAAI,CAACE,UAAL,CAAgB,CAAhB,IAAqB9C,SAAS,CAAC6C,IAA3C;AACA;;AAEME,QAAAA,gBAAgB,GAAG;AACzB,eAAKC,iBAAL;;AACA,eAAKC,cAAL;AACA;;AAEMC,QAAAA,OAAO,GAAG;AAChB,eAAKC,KAAL,GAAa,IAAb,CADgB,CAEhB;AACA;;AAEOH,QAAAA,iBAAiB,GAAG;AAC3B,eAAKxB,IAAL,GAAYnC,UAAU,CAACgC,WAAX,GAAyBE,GAAzB,EAAZ;AACA,eAAKI,MAAL,GAAc,KAAKH,IAAL,CAAUG,MAAxB;AACA,eAAKG,OAAL,GAAe,KAAKN,IAAL,CAAUM,OAAzB;;AACA,cAAI,KAAKA,OAAT,EAAkB;AACjB,iBAAKA,OAAL,CAAasB,IAAb,GAAoB,KAAKpD,SAAL,CAAeqD,QAAnC;AACA,kBAAMC,KAAK,GAAGpC,eAAe,CAAC,KAAKY,OAAN,EAAe,KAAKc,IAApB,EAA0B,KAAK5C,SAAL,CAAeqD,QAAzC,CAA7B;AACA,kBAAME,KAAK,GAAG,KAAKvD,SAAL,CAAeM,MAAf,GAAwB,CAAxB,GAA4BiC,KAA1C;AACA,iBAAKe,KAAL,GAAaE,UAAU,CAACF,KAAK,CAACb,OAAN,CAAc,CAAd,CAAD,CAAV,GAA+Bc,KAA5C;AACA,iBAAKE,MAAL,GAAc,CAAC,IAAIhD,cAAL,IAAuB,KAAKT,SAAL,CAAeO,QAAtC,GAAiDgD,KAA/D;AACA,iBAAKG,OAAL,GAAe,EAAE,KAAK1D,SAAL,CAAeO,QAAf,GAA0BE,cAA5B,IAA8C,CAA7D;AACA;;AAED,cAAI,KAAKkB,MAAL,CAAY2B,KAAZ,KAAsB,KAAKA,KAA/B,EAAsC;AACrC,iBAAK3B,MAAL,CAAY2B,KAAZ,GAAoB,KAAKA,KAAzB;AACA;;AAED,cAAI,KAAK3B,MAAL,CAAY8B,MAAZ,KAAuB,KAAKA,MAAhC,EAAwC;AACvC,iBAAK9B,MAAL,CAAY8B,MAAZ,GAAqB,KAAKA,MAA1B;AACA;;AAED,cAAI,CAAC,KAAKN,KAAV,EAAiB;AAChB,iBAAKA,KAAL,GAAa,IAAIrC,UAAJ,EAAb;AACA;;AAED,eAAKqC,KAAL,CAAWQ,KAAX,CAAiB,KAAKhC,MAAtB;AACA;;AAEOsB,QAAAA,cAAc,GAAG;AACxB,cAAI,CAAC,KAAKnB,OAAN,IAAiB,CAAC,KAAKH,MAA3B,EAAmC;AAClC;AACA;;AAED,gBAAMG,OAAO,GAAG,KAAKA,OAArB;AACA,gBAAM9B,SAAS,GAAG,KAAKA,SAAvB;AACA,gBAAMsD,KAAK,GAAG,KAAK3B,MAAL,CAAY2B,KAA1B;AACA,gBAAMG,MAAM,GAAG,KAAK9B,MAAL,CAAY8B,MAA3B;AAEA3B,UAAAA,OAAO,CAAC8B,SAAR,GAAoB,QAApB;AACA9B,UAAAA,OAAO,CAAC+B,YAAR,GAAuB,YAAvB;AACA/B,UAAAA,OAAO,CAACgC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBR,KAAxB,EAA+BG,MAA/B,EAZwB,CAaxB;;AACA3B,UAAAA,OAAO,CAACiC,SAAR,GAAoBvB,gBAApB;AACAV,UAAAA,OAAO,CAACkC,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBV,KAAvB,EAA8BG,MAA9B;AACA3B,UAAAA,OAAO,CAACsB,IAAR,GAAepD,SAAS,CAACqD,QAAzB;AAEA,gBAAM9C,QAAQ,GAAGP,SAAS,CAACO,QAA3B;AACA,gBAAM0D,MAAM,GAAGX,KAAK,GAAG,CAAvB;AACA,gBAAMY,MAAM,GAAGT,MAAM,GAAG,CAAT,GAAalD,QAAQ,GAAGU,YAAxB,GAAuCV,QAAQ,GAAGmC,eAAjE;AACA,gBAAMxC,KAAK,GAAGF,SAAS,CAACE,KAAxB,CArBwB,CAsBxB;;AACA4B,UAAAA,OAAO,CAACqC,QAAR,GAAmB,OAAnB;AACArC,UAAAA,OAAO,CAACiC,SAAR,GAAqB,QAAO7D,KAAK,CAACkE,CAAE,KAAIlE,KAAK,CAACmE,CAAE,KAAInE,KAAK,CAACoE,CAAE,KAAI,CAAE,GAAlE;;AACA,cAAItE,SAAS,CAACK,UAAd,EAA0B;AACzB,kBAAMkE,WAAW,GAAGvE,SAAS,CAACI,GAAV,IAAiBgC,KAArC;AACAN,YAAAA,OAAO,CAAC0C,WAAR,GAAuB,QAAOD,WAAW,CAACH,CAAE,KAAIG,WAAW,CAACF,CAAE,KAAIE,WAAW,CAACD,CAAE,KAAIC,WAAW,CAACE,CAAZ,GAAgB,GAAI,GAAxG;AACA3C,YAAAA,OAAO,CAAC4C,SAAR,GAAoB1E,SAAS,CAACM,MAAV,GAAmB,CAAvC;AACAwB,YAAAA,OAAO,CAAC6C,UAAR,CAAmB,KAAK/B,IAAxB,EAA8BqB,MAA9B,EAAsCC,MAAtC;AACA;;AACDpC,UAAAA,OAAO,CAAC8C,QAAR,CAAiB,KAAKhC,IAAtB,EAA4BqB,MAA5B,EAAoCC,MAApC,EA/BwB,CAiCxB;AACA;AACA;;AA1FkB,O;AA6FdW,MAAAA,W,GAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,O;;qCAEPtF,mB,GAAN,MAAMA,mBAAN,SAAkC2B,SAAlC,CAA4C;AAClD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ4D,QAAAA,YAAY,CAACzB,KAAD,EAAgBG,MAAhB,EAAgCuB,MAAc,GAAGH,WAAW,CAACC,QAA7D,EAAuE;AACzF,eAAKnB,KAAL,CAAW;AACVL,YAAAA,KADU;AAEVG,YAAAA,MAFU;AAGVuB,YAAAA;AAHU,WAAX;AAKA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACQC,QAAAA,aAAa,CAAC9B,KAAD,EAAoB+B,CAApB,EAA+BC,CAA/B,EAA0C;AAC7D,gBAAMC,UAAU,GAAG,KAAKC,aAAL,EAAnB;;AACA,cAAI,CAAClC,KAAD,IAAU,CAACiC,UAAf,EAA2B;AAC1B;AACA;;AAED,gBAAME,SAAS,GAAG,KAAKC,aAAL,EAAlB;;AACA,cAAI,CAACD,SAAL,EAAgB;AACfE,YAAAA,OAAO,CAACC,IAAR,CAAa,sBAAb;AACA;AACA;;AAED,gBAAMC,MAAM,GAAG,IAAIhG,iBAAJ,EAAf;AACAgG,UAAAA,MAAM,CAACC,SAAP,CAAiBT,CAAjB,GAAqBA,CAArB;AACAQ,UAAAA,MAAM,CAACC,SAAP,CAAiBR,CAAjB,GAAqBA,CAArB;AACAO,UAAAA,MAAM,CAACE,SAAP,CAAiBtC,KAAjB,GAAyBH,KAAK,CAACG,KAA/B;AACAoC,UAAAA,MAAM,CAACE,SAAP,CAAiBnC,MAAjB,GAA0BN,KAAK,CAACM,MAAhC;AACA6B,UAAAA,SAAS,CAACO,sBAAV,CAAiC,CAAC1C,KAAK,CAAC3B,IAAP,CAAjC,EAAoE4D,UAApE,EAAgF,CAACM,MAAD,CAAhF;AACA;;AA3CiD,O;;iBA6CvCI,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;SAAAA,c,8BAAAA,c;;6BAMCrG,W,GAAN,MAAMA,WAAN,CAAkB;AACf,YAAL6D,KAAK,GAAG;AACX,iBAAO,KAAKyC,MAAZ;AACA;;AAES,YAANtC,MAAM,GAAG;AACZ,iBAAO,KAAKuC,OAAZ;AACA;;AAaDrD,QAAAA,WAAW,CAACW,KAAD,EAAgBG,MAAhB,EAAgC;AAAA,sCAX9BnB,KAW8B;;AAAA,sCAV9BA,KAU8B;;AAAA,0CAT1BA,KAS0B;;AAAA,0CAR1B,CAQ0B;;AAAA,2CAPzB,CAOyB;;AAAA,8CANtB,CAMsB;;AAAA,0CAJ1B,KAI0B;;AAAA,kDAFlBwD,cAAc,CAACG,MAEG;;AAC1C;AACM,eAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;;AACN,eAAK,IAAIC,GAAT,IAAgBN,cAAhB,EAAgC;AAC/B,kBAAMO,OAAO,GAAG,IAAI7G,mBAAJ,EAAhB;AACA6G,YAAAA,OAAO,CAACtB,YAAR,CAAqBzB,KAArB,EAA4BG,MAA5B;AACA,iBAAKyC,iBAAL,CAAuBI,GAAvB,CAA2BC,MAAM,CAACT,cAAc,CAACM,GAAD,CAAf,CAAjC,EAAwD,IAAItG,SAAJ,CAAcuG,OAAd,CAAxD;AACA,WAPyC,CAQ1C;;;AAEA,eAAKG,UAAL,GAAkBjE,KAAK,GAAG,CAA1B;AACA,eAAKwD,MAAL,GAAczC,KAAd;AACA,eAAK0C,OAAL,GAAevC,MAAf;AACA9C,UAAAA,QAAQ,CAAC8F,EAAT,CAAY7F,QAAQ,CAAC8F,yBAArB,EAAgD,KAAKC,eAArD,EAAsE,IAAtE;AACA;;AAEMC,QAAAA,mBAAmB,CAACC,aAAD,EAA+BC,aAA/B,EAA8C;AACvE,gBAAMT,OAAO,GAAGQ,aAAa,CAAC1D,KAA9B;AACA,gBAAM4D,MAAM,GAAGpG,QAAQ,CAACqG,IAAT,CAAeD,MAA9B;;AACA,cAAI,CAACV,OAAD,IAAY,CAAC,KAAKH,iBAAL,CAAuBe,GAAvB,CAA2BH,aAA3B,CAAb,IAA0D,CAACC,MAA/D,EAAuE;AACtE,mBAAO,IAAP;AACA;;AAED,gBAAMzD,KAAK,GAAG+C,OAAO,CAAC/C,KAAtB;AACA,gBAAMG,MAAM,GAAG4C,OAAO,CAAC5C,MAAvB;;AAEA,cAAI,KAAKyD,EAAL,GAAU5D,KAAV,GAAkBhB,KAAlB,GAA0B,KAAKyD,MAAnC,EAA2C;AAC1C,iBAAKmB,EAAL,GAAU5E,KAAV;AACA,iBAAK6E,EAAL,GAAU,KAAKC,MAAf;AACA;;AAED,cAAI,KAAKD,EAAL,GAAU1D,MAAV,GAAmB,KAAK2D,MAA5B,EAAoC;AACnC,iBAAKA,MAAL,GAAc,KAAKD,EAAL,GAAU1D,MAAV,GAAmBnB,KAAjC;AACA;;AAED,cAAI,KAAK8E,MAAL,GAAc,KAAKpB,OAAvB,EAAgC;AAC/B5E,YAAAA,MAAM,CAAC,KAAD,CAAN;AACA,mBAAO,IAAP;AACA;;AAED,eAAK8E,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CT,OAA1C,CAAkDpB,aAAlD,CAAgEoB,OAAhE,EAAyE,KAAKa,EAA9E,EAAkF,KAAKC,EAAvF;AAEA,eAAKE,MAAL,GAAc,IAAd;AAEA,gBAAMC,gBAAgB,GAAG,IAAIhI,oBAAJ,EAAzB;AACAgI,UAAAA,gBAAgB,CAACC,CAAjB,GAAqB,KAAKL,EAAL,GAAU,KAAKV,UAApC;AACAc,UAAAA,gBAAgB,CAACE,CAAjB,GAAqB,KAAKL,EAAL,GAAU,KAAKX,UAApC;AACAc,UAAAA,gBAAgB,CAACjB,OAAjB,GAA2B,KAAKH,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CT,OAArE;AACAiB,UAAAA,gBAAgB,CAACG,KAAjB,GAAyB,IAAzB;AACAH,UAAAA,gBAAgB,CAACI,CAAjB,GAAqBb,aAAa,CAACvD,KAAd,GAAsBf,KAA3C;AACA+E,UAAAA,gBAAgB,CAACK,CAAjB,GAAqBd,aAAa,CAACpD,MAAd,GAAuBlB,KAA5C;AACA+E,UAAAA,gBAAgB,CAACM,QAAjB,GAA4BN,gBAAgB,CAACI,CAA7C;AACAJ,UAAAA,gBAAgB,CAAC5D,OAAjB,GAA2BmD,aAAa,CAACnD,OAAzC;AAEA,eAAKwD,EAAL,IAAW5D,KAAK,GAAGhB,KAAnB;AACA,eAAK4D,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0Ce,oBAA1C,CAA+DhB,aAAa,CAAChE,IAA7E,EAAmFyE,gBAAnF;AAEA,eAAKpB,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CI,EAA1C,GAA+C,KAAKA,EAApD;AACA,eAAKhB,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CK,EAA1C,GAA+C,KAAKA,EAApD;AACA,eAAKjB,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CM,MAA1C,GAAmD,KAAKA,MAAxD;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,iBAAOE,gBAAP;AACA;;AAEMQ,QAAAA,MAAM,GAAG;AACf,cAAI,CAAC,KAAKT,MAAV,EAAkB;AACjB;AACA,WAHc,CAIf;;;AACA,eAAKA,MAAL,GAAc,KAAd;AACA;;AAEM1D,QAAAA,KAAK,GAAG;AACd,eAAKuD,EAAL,GAAU5E,KAAV;AACA,eAAK6E,EAAL,GAAU7E,KAAV;AACA,eAAK8E,MAAL,GAAc9E,KAAd,CAHc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,eAAK,IAAIyF,KAAT,IAAkB,KAAK7B,iBAAL,CAAuB8B,MAAvB,EAAlB,EAAmD;AAClDD,YAAAA,KAAK,CAACE,KAAN;AACA;AACD;;AAEM/E,QAAAA,OAAO,GAAG;AAChB,eAAKS,KAAL;;AACA,eAAK,IAAIoE,KAAT,IAAkB,KAAK7B,iBAAL,CAAuB8B,MAAvB,EAAlB,EAAmD;AAClDD,YAAAA,KAAK,CAAC1B,OAAN,CAAcnD,OAAd;AACA6E,YAAAA,KAAK,CAAC1B,OAAN,CAAcA,OAAd,GAAwB,IAAxB;AACA;;AACD,eAAKH,iBAAL,CAAuB+B,KAAvB;AACA;;AAEDC,QAAAA,UAAU,CAACpB,aAAD,EAAgB;AACzB,cAAI,CAACA,aAAL,EAAoBA,aAAa,GAAG,KAAKqB,cAArB;;AACpB,cAAI,KAAKjC,iBAAL,CAAuBe,GAAvB,CAA2BH,aAA3B,CAAJ,EAA+C;AAC9C,mBAAO,KAAKZ,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CoB,UAA1C,EAAP;AACA;;AACD,iBAAO,KAAKhC,iBAAL,CAAuB3E,GAAvB,CAA2B,KAAK4G,cAAhC,EAAgDD,UAAhD,EAAP;AACA;;AAEMvB,QAAAA,eAAe,GAAG;AACxB,eAAKyB,aAAL;AACA;;AAEMA,QAAAA,aAAa,GAAG;AACtB,eAAKlF,OAAL;;AAEA,eAAK,IAAI6E,KAAT,IAAkB,KAAK7B,iBAAL,CAAuB8B,MAAvB,EAAlB,EAAmD;AAClD,kBAAM3B,OAAO,GAAG,IAAI7G,mBAAJ,EAAhB;AACA6G,YAAAA,OAAO,CAACtB,YAAR,CAAqB,KAAKgB,MAA1B,EAAkC,KAAKC,OAAvC;AACA+B,YAAAA,KAAK,CAAC1B,OAAN,CAAcA,OAAd,GAAwBA,OAAxB;AACA;AACD;;AAEMgC,QAAAA,SAAS,CAACjC,GAAD,EAAcU,aAAd,EAA6B;AAC5C,cAAI,CAACA,aAAL,EAAoBA,aAAa,GAAG,KAAKqB,cAArB;AACpB,iBAAO,KAAKjC,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CwB,iBAA1C,CAA4DlC,GAA5D,CAAP;AACA;;AAEMmC,QAAAA,0BAA0B,CAAC3F,IAAD,EAAe5C,SAAf,EAAsC8G,aAAtC,EAAqD;AACrF,cAAI,CAAC,KAAKZ,iBAAL,CAAuBe,GAAvB,CAA2BH,aAA3B,CAAL,EAAgD;AAC/C,kBAAMT,OAAO,GAAG,IAAI7G,mBAAJ,EAAhB;AACA6G,YAAAA,OAAO,CAACtB,YAAR,CAAqB,KAAKzB,KAA1B,EAAiC,KAAKG,MAAtC;AACA,iBAAKyC,iBAAL,CAAuBI,GAAvB,CAA2BQ,aAA3B,EAA0C,IAAIhH,SAAJ,CAAcuG,OAAd,CAA1C;AACA;;AACD,eAAKa,EAAL,GAAU,KAAKhB,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CI,EAApD;AACA,eAAKC,EAAL,GAAU,KAAKjB,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CK,EAApD;AACA,eAAKC,MAAL,GAAc,KAAKlB,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CM,MAAxD;AACA,gBAAMvE,IAAI,GAAGD,IAAI,CAACE,UAAL,CAAgB,CAAhB,IAAqB9C,SAAS,CAAC6C,IAA5C;AACA,cAAI2F,MAAM,GAAG,KAAKtC,iBAAL,CAAuB3E,GAAvB,CAA2BuF,aAA3B,EAA0CwB,iBAA1C,CAA4DzF,IAA5D,CAAb;;AACA,cAAI,CAAC2F,MAAL,EAAa;AACZ,kBAAMC,IAAI,GAAG,IAAIlJ,aAAJ,CAAkBqD,IAAlB,EAAwB5C,SAAxB,CAAb;AACAyI,YAAAA,IAAI,CAAC1F,gBAAL;AACAyF,YAAAA,MAAM,GAAG,KAAK5B,mBAAL,CAAyB6B,IAAzB,EAA+B3B,aAA/B,CAAT;AACA2B,YAAAA,IAAI,CAACvF,OAAL;AACA,WAhBoF,CAiBrF;;;AACA,iBAAOsF,MAAP;AACA;;AA9KuB,O;;gCAgMZE,c,GAAkC;AAC9CC,QAAAA,SAAS,EAAE,IADmC;AAE9CpI,QAAAA,QAAQ,EAAE,CAFoC;AAG9CqI,QAAAA,UAAU,EAAE,CAHkC;AAI9CC,QAAAA,MAAM,EAAE,CAJsC;AAK9CC,QAAAA,MAAM,EAAE,CALsC;AAM9CjG,QAAAA,IAAI,EAAE,EANwC;AAO9CrC,QAAAA,UAAU,EAAE,EAPkC;AAQ9C6C,QAAAA,QAAQ,EAAE,OARoC;AAS9CnD,QAAAA,KAAK,EAAEQ,KAAK,CAAC0B,KAAN,CAAYC,KAAZ,EATuC;AAU9ChC,QAAAA,UAAU,EAAE,KAVkC;AAW9CD,QAAAA,GAAG,EAAEM,KAAK,CAAC0B,KAAN,CAAYC,KAAZ,EAXyC;AAY9C/B,QAAAA,MAAM,EAAE;AAZsC,O;;mCA0BlCZ,iB,GAAN,MAAMA,iBAAN,CAAwB;AACC;AAE/BiD,QAAAA,WAAW,CAAQoG,UAAkB,GAAG,CAA7B,EAAuCC,aAAqB,GAAG,CAA/D,EAAyErD,SAAiB,GAAG,IAAIhG,MAAJ,EAA7F,EAAkHiG,SAAiB,GAAG,IAAIhG,MAAJ,EAAtI,EAA2JqJ,SAA8B,GAAG,IAAIpJ,mBAAJ,EAA5L,EAAuN;AAAA,eAA/MkJ,UAA+M,GAA/MA,UAA+M;AAAA,eAAhLC,aAAgL,GAAhLA,aAAgL;AAAA,eAA9IrD,SAA8I,GAA9IA,SAA8I;AAAA,eAArGC,SAAqG,GAArGA,SAAqG;AAAA,eAA5DqD,SAA4D,GAA5DA,SAA4D;AAAE;;AAE7NC,QAAAA,IAAI,CAACC,IAAD,EAA0B;AACpC,eAAKJ,UAAL,GAAkBI,IAAI,CAACJ,UAAvB;AACA,eAAKC,aAAL,GAAqBG,IAAI,CAACH,aAA1B;AACA,eAAKrD,SAAL,CAAeuD,IAAf,CAAoBC,IAAI,CAACxD,SAAzB;AACA,eAAKC,SAAL,CAAesD,IAAf,CAAoBC,IAAI,CAACvD,SAAzB;AACA,eAAKqD,SAAL,CAAeC,IAAf,CAAoBC,IAAI,CAACF,SAAzB;AACA,iBAAO,IAAP;AACA;;AAZ6B,O;;wBAelBtJ,M,GAAN,MAAMA,MAAN,CAAa;AACY;AAE/BgD,QAAAA,WAAW,CAAQuC,CAAS,GAAG,CAApB,EAA8BC,CAAS,GAAG,CAA1C,EAAoDiE,CAAS,GAAG,CAAhE,EAAmE;AAAA,eAA3DlE,CAA2D,GAA3DA,CAA2D;AAAA,eAArCC,CAAqC,GAArCA,CAAqC;AAAA,eAAfiE,CAAe,GAAfA,CAAe;AAAE;;AAEzEF,QAAAA,IAAI,CAACC,IAAD,EAAe;AACzB,eAAKjE,CAAL,GAASiE,IAAI,CAACjE,CAAd;AACA,eAAKC,CAAL,GAASgE,IAAI,CAAChE,CAAd;AACA,eAAKiE,CAAL,GAASD,IAAI,CAACC,CAAd;AACA,iBAAO,IAAP;AACA;;AAVkB,O;;wBAaPxJ,M,GAAN,MAAMA,MAAN,CAAa;AACY;AAE/B+C,QAAAA,WAAW,CAAQW,KAAa,GAAG,CAAxB,EAAkCG,MAAc,GAAG,CAAnD,EAA6D4F,KAAa,GAAG,CAA7E,EAAgF;AAAA,eAAxE/F,KAAwE,GAAxEA,KAAwE;AAAA,eAA9CG,MAA8C,GAA9CA,MAA8C;AAAA,eAAnB4F,KAAmB,GAAnBA,KAAmB;AAAE;;AAEtFH,QAAAA,IAAI,CAACC,IAAD,EAAe;AACzB,eAAK7F,KAAL,GAAa6F,IAAI,CAAC7F,KAAlB;AACA,eAAKG,MAAL,GAAc0F,IAAI,CAAC1F,MAAnB;AACA,eAAK4F,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,iBAAO,IAAP;AACA;;AAVkB,O;;qCAYPxJ,mB,GAAN,MAAMA,mBAAN,CAA0B;AACD;AAE/B8C,QAAAA,WAAW,CAAQ2G,QAAgB,GAAG,CAA3B,EAAqCC,cAAsB,GAAG,CAA9D,EAAwEC,UAAkB,GAAG,CAA7F,EAAgG;AAAA,eAAxFF,QAAwF,GAAxFA,QAAwF;AAAA,eAA3DC,cAA2D,GAA3DA,cAA2D;AAAA,eAAxBC,UAAwB,GAAxBA,UAAwB;AAAE;;AAEtGN,QAAAA,IAAI,CAACC,IAAD,EAA4B;AACtC,eAAKG,QAAL,GAAgBH,IAAI,CAACG,QAArB;AACA,eAAKC,cAAL,GAAsBJ,IAAI,CAACI,cAA3B;AACA,eAAKC,UAAL,GAAkBL,IAAI,CAACK,UAAvB;AACA,iBAAO,IAAP;AACA;;AAV+B,O;;2BAapB1J,S,GAAN,MAAMA,SAAN,CAAgB;AAOtB6C,QAAAA,WAAW,CAAC0D,OAAD,EAAU;AAAA;;AAAA;;AAAA,sCAJT/D,KAIS;;AAAA,sCAHTA,KAGS;;AAAA,0CAFLA,KAEK;;AACpB,eAAKgG,iBAAL,GAAyB,EAAzB;AACA,eAAKjC,OAAL,GAAeA,OAAf;AACA,eAAKa,EAAL,GAAU,CAAV;AACA,eAAKC,EAAL,GAAU,CAAV;AACA,eAAKC,MAAL,GAAc,CAAd;AACA;;AAEMS,QAAAA,oBAAoB,CAACW,MAAD,EAASlB,gBAAT,EAA2B;AACrD,eAAKgB,iBAAL,CAAuBE,MAAvB,IAAiClB,gBAAjC;AACA;;AAEMmC,QAAAA,qBAAqB,GAAG;AAC9B,gBAAMC,qBAAqB,GAAG,EAA9B;;AACA,eAAK,MAAMtD,GAAX,IAAkBuD,MAAM,CAACC,IAAP,CAAY,KAAKtB,iBAAjB,CAAlB,EAAuD;AACtD,kBAAMP,KAAK,GAAG,IAAIzI,oBAAJ,EAAd;AACAyB,YAAAA,EAAE,CAAC8I,KAAH,CAAS9B,KAAT,EAAgB,KAAKO,iBAAL,CAAuBlC,GAAvB,CAAhB;AACAsD,YAAAA,qBAAqB,CAACtD,GAAD,CAArB,GAA6B2B,KAA7B;AACA;;AACD,iBAAO2B,qBAAP;AACA;;AAEMxB,QAAAA,UAAU,GAAG;AACnB,iBAAO,KAAK7B,OAAZ;AACA;;AAEMgC,QAAAA,SAAS,CAACjC,GAAD,EAAM;AACrB,iBAAO,KAAKkC,iBAAL,CAAuBlC,GAAvB,CAAP;AACA;;AAEMmC,QAAAA,0BAA0B,CAAC3F,IAAD,EAAO5C,SAAP,EAAmB;AACnD,gBAAMoG,GAAG,GAAGxD,IAAI,CAACE,UAAL,CAAgB,CAAhB,CAAZ;AACA,gBAAMgH,MAAM,GAAG,KAAKxB,iBAAL,CAAuByB,cAAvB,CAAsC3D,GAAtC,CAAf;AACA,cAAIoC,MAAJ;;AACA,cAAIsB,MAAJ,EAAY;AACXtB,YAAAA,MAAM,GAAG,KAAKF,iBAAL,CAAuBlC,GAAvB,CAAT;AACA,WAFD,MAEO;AACNoC,YAAAA,MAAM,GAAG,IAAT;AACA;;AACD,iBAAOA,MAAP;AACA;;AAEMP,QAAAA,KAAK,GAAG;AACd,eAAKK,iBAAL,GAAyB,EAAzB;AACA;;AAnDqB,O","sourcesContent":["/*\r\n Copyright (c) 2020 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated engine source code (the \"Software\"), a limited,\r\n worldwide, royalty-free, non-assignable, revocable and non-exclusive license\r\n to use Cocos Creator solely to develop games on your target platforms. You shall\r\n not use Cocos Creator software for developing other software or tools that's\r\n used for developing games. You are not granted to publish, distribute,\r\n sublicense, and/or sell copies of Cocos Creator.\r\n\r\n The software or tools in this License Agreement are licensed, not sold.\r\n Xiamen Yaji Software Co., Ltd. reserves all rights not expressly granted to you.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\n\r\nimport { BASELINE_RATIO, Color, director, Director, error, getBaselineOffset, ImageAsset, js, macro, MIDDLE_RATIO, safeMeasureText, Texture2D, warnID } from \"cc\";\r\n\r\n/**\r\n * @packageDocumentation\r\n * @hidden\r\n */\r\n\r\nexport interface ISharedLabelData {\r\n\tcanvas: HTMLCanvasElement;\r\n\tcontext: CanvasRenderingContext2D | null;\r\n}\r\n\r\nlet _canvasPool: CanvasPool;\r\n\r\nexport class CanvasPool {\r\n\tstatic getInstance(): CanvasPool {\r\n\t\tif (!_canvasPool) {\r\n\t\t\t_canvasPool = new CanvasPool();\r\n\t\t}\r\n\t\treturn _canvasPool;\r\n\t}\r\n\tpublic pool: ISharedLabelData[] = [];\r\n\tpublic get() {\r\n\t\tlet data = this.pool.pop();\r\n\r\n\t\tif (!data) {\r\n\t\t\tconst canvas = document.createElement(\"canvas\");\r\n\t\t\tconst context = canvas.getContext(\"2d\");\r\n\t\t\tdata = {\r\n\t\t\t\tcanvas,\r\n\t\t\t\tcontext,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tpublic put(canvas: ISharedLabelData) {\r\n\t\tif (this.pool.length >= macro.MAX_LABEL_CANVAS_POOL_SIZE) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pool.push(canvas);\r\n\t}\r\n}\r\n\r\n// export function packToDynamicAtlas(comp, frame) {\r\n//     // TODO: Material API design and export from editor could affect the material activation process\r\n//     // need to update the logic here\r\n//     if (frame && !TEST) {\r\n//         if (!frame._original && dynamicAtlasManager) {\r\n//             let packedFrame = dynamicAtlasManager.insertSpriteFrame(frame);\r\n//             if (packedFrame) {\r\n//                 frame._setDynamicAtlasFrame(packedFrame);\r\n//             }\r\n//         }\r\n//         if (comp.sharedMaterials[0].getProperty('texture') !== frame._texture) {\r\n//             comp._activateMaterial();\r\n//         }\r\n//     }\r\n// }\r\n\r\ninterface ILabelInfo {\r\n\tfontSize: number;\r\n\tlineHeight: number;\r\n\thash: string;\r\n\tfontFamily: string;\r\n\tfontDesc: string;\r\n\thAlign: number;\r\n\tvAlign: number;\r\n\tcolor: Color;\r\n\tisOutlined: boolean;\r\n\tout: Color;\r\n\tmargin: number;\r\n}\r\n\r\nconst WHITE = Color.WHITE.clone();\r\nconst space = 0;\r\nconst bleed = 2;\r\n\r\nclass FontLetterDefinition {\r\n\tpublic u = 0;\r\n\tpublic v = 0;\r\n\tpublic w = 0;\r\n\tpublic h = 0;\r\n\tpublic texture: LetterRenderTexture | null = null;\r\n\tpublic offsetX = 0;\r\n\tpublic offsetY = 0;\r\n\tpublic valid = false;\r\n\tpublic xAdvance = 0;\r\n}\r\n\r\nconst _backgroundStyle = `rgba(255, 255, 255, ${(1 / 255).toFixed(3)})`;\r\nconst BASELINE_OFFSET = getBaselineOffset();\r\n\r\nclass LetterTexture {\r\n\tpublic image: ImageAsset | null = null;\r\n\tpublic labelInfo: ILabelInfo;\r\n\tpublic char: string;\r\n\tpublic data: ISharedLabelData | null = null;\r\n\tpublic canvas: HTMLCanvasElement | null = null;\r\n\tpublic context: CanvasRenderingContext2D | null = null;\r\n\tpublic width = 0;\r\n\tpublic height = 0;\r\n\tpublic offsetY = 0;\r\n\tpublic hash: string;\r\n\tconstructor(char: string, labelInfo: ILabelInfo) {\r\n\t\tthis.char = char;\r\n\t\tthis.labelInfo = labelInfo;\r\n\t\tthis.hash = char.charCodeAt(0) + labelInfo.hash;\r\n\t}\r\n\r\n\tpublic updateRenderData() {\r\n\t\tthis._updateProperties();\r\n\t\tthis._updateTexture();\r\n\t}\r\n\r\n\tpublic destroy() {\r\n\t\tthis.image = null;\r\n\t\t// Label._canvasPool.put(this._data);\r\n\t}\r\n\r\n\tprivate _updateProperties() {\r\n\t\tthis.data = CanvasPool.getInstance().get();\r\n\t\tthis.canvas = this.data.canvas;\r\n\t\tthis.context = this.data.context;\r\n\t\tif (this.context) {\r\n\t\t\tthis.context.font = this.labelInfo.fontDesc;\r\n\t\t\tconst width = safeMeasureText(this.context, this.char, this.labelInfo.fontDesc);\r\n\t\t\tconst blank = this.labelInfo.margin * 2 + bleed;\r\n\t\t\tthis.width = parseFloat(width.toFixed(2)) + blank;\r\n\t\t\tthis.height = (1 + BASELINE_RATIO) * this.labelInfo.fontSize + blank;\r\n\t\t\tthis.offsetY = -(this.labelInfo.fontSize * BASELINE_RATIO) / 2;\r\n\t\t}\r\n\r\n\t\tif (this.canvas.width !== this.width) {\r\n\t\t\tthis.canvas.width = this.width;\r\n\t\t}\r\n\r\n\t\tif (this.canvas.height !== this.height) {\r\n\t\t\tthis.canvas.height = this.height;\r\n\t\t}\r\n\r\n\t\tif (!this.image) {\r\n\t\t\tthis.image = new ImageAsset();\r\n\t\t}\r\n\r\n\t\tthis.image.reset(this.canvas);\r\n\t}\r\n\r\n\tprivate _updateTexture() {\r\n\t\tif (!this.context || !this.canvas) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst context = this.context;\r\n\t\tconst labelInfo = this.labelInfo;\r\n\t\tconst width = this.canvas.width;\r\n\t\tconst height = this.canvas.height;\r\n\r\n\t\tcontext.textAlign = \"center\";\r\n\t\tcontext.textBaseline = \"alphabetic\";\r\n\t\tcontext.clearRect(0, 0, width, height);\r\n\t\t// Add a white background to avoid black edges.\r\n\t\tcontext.fillStyle = _backgroundStyle;\r\n\t\tcontext.fillRect(0, 0, width, height);\r\n\t\tcontext.font = labelInfo.fontDesc;\r\n\r\n\t\tconst fontSize = labelInfo.fontSize;\r\n\t\tconst startX = width / 2;\r\n\t\tconst startY = height / 2 + fontSize * MIDDLE_RATIO + fontSize * BASELINE_OFFSET;\r\n\t\tconst color = labelInfo.color;\r\n\t\t// use round for line join to avoid sharp intersect point\r\n\t\tcontext.lineJoin = \"round\";\r\n\t\tcontext.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${1})`;\r\n\t\tif (labelInfo.isOutlined) {\r\n\t\t\tconst strokeColor = labelInfo.out || WHITE;\r\n\t\t\tcontext.strokeStyle = `rgba(${strokeColor.r}, ${strokeColor.g}, ${strokeColor.b}, ${strokeColor.a / 255})`;\r\n\t\t\tcontext.lineWidth = labelInfo.margin * 2;\r\n\t\t\tcontext.strokeText(this.char, startX, startY);\r\n\t\t}\r\n\t\tcontext.fillText(this.char, startX, startY);\r\n\r\n\t\t// this.texture.handleLoadedTexture();\r\n\t\t// (this.image as Texture2D).updateImage();\r\n\t}\r\n}\r\n\r\nconst PixelFormat = { RGBA8888: 35 };\r\n\r\nexport class LetterRenderTexture extends Texture2D {\r\n\t/**\r\n\t * @en\r\n\t * Init the render texture with size.\r\n\t * @zh\r\n\t * 初始化 render texture。\r\n\t * @param [width]\r\n\t * @param [height]\r\n\t * @param [string]\r\n\t */\r\n\tpublic initWithSize(width: number, height: number, format: number = PixelFormat.RGBA8888) {\r\n\t\tthis.reset({\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tformat,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @en Draw a texture to the specified position\r\n\t * @zh 将指定的图片渲染到指定的位置上。\r\n\t * @param {Texture2D} image\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t */\r\n\tpublic drawTextureAt(image: ImageAsset, x: number, y: number) {\r\n\t\tconst gfxTexture = this.getGFXTexture();\r\n\t\tif (!image || !gfxTexture) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst gfxDevice = this._getGFXDevice();\r\n\t\tif (!gfxDevice) {\r\n\t\t\tconsole.warn(\"Unable to get device\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst region = new BufferTextureCopy();\r\n\t\tregion.texOffset.x = x;\r\n\t\tregion.texOffset.y = y;\r\n\t\tregion.texExtent.width = image.width;\r\n\t\tregion.texExtent.height = image.height;\r\n\t\tgfxDevice.copyTexImagesToTexture([image.data as HTMLCanvasElement], gfxTexture, [region]);\r\n\t}\r\n}\r\nexport enum ECharCacheType {\r\n\tnormal = 1, //不要改\r\n\tmain,\r\n\tdialog,\r\n\tscrollview,\r\n}\r\nexport class LetterAtlas {\r\n\tget width() {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height() {\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tprivate _x = space;\r\n\tprivate _y = space;\r\n\tprivate _nextY = space;\r\n\tprivate _width = 0;\r\n\tprivate _height = 0;\r\n\tprivate _halfBleed = 0;\r\n\tpublic declare fontDefDictionary: Map<number, FontAtlas>;\r\n\tprivate _dirty = false;\r\n\r\n\tprivate _charCacheType = ECharCacheType.normal;\r\n\r\n\tconstructor(width: number, height: number) {\r\n\t\t//TODO: 待优化\r\n        this.fontDefDictionary = new Map();\r\n\t\tfor (let key in ECharCacheType) {\r\n\t\t\tconst texture = new LetterRenderTexture();\r\n\t\t\ttexture.initWithSize(width, height);\r\n\t\t\tthis.fontDefDictionary.set(Number(ECharCacheType[key]), new FontAtlas(texture));\r\n\t\t}\r\n\t\t//TODO: 待优化\r\n\r\n\t\tthis._halfBleed = bleed / 2;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tdirector.on(Director.EVENT_BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this);\r\n\t}\r\n\r\n\tpublic insertLetterTexture(letterTexture: LetterTexture, charCacheType) {\r\n\t\tconst texture = letterTexture.image;\r\n\t\tconst device = director.root!.device;\r\n\t\tif (!texture || !this.fontDefDictionary.has(charCacheType) || !device) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst width = texture.width;\r\n\t\tconst height = texture.height;\r\n\r\n\t\tif (this._x + width + space > this._width) {\r\n\t\t\tthis._x = space;\r\n\t\t\tthis._y = this._nextY;\r\n\t\t}\r\n\r\n\t\tif (this._y + height > this._nextY) {\r\n\t\t\tthis._nextY = this._y + height + space;\r\n\t\t}\r\n\r\n\t\tif (this._nextY > this._height) {\r\n\t\t\twarnID(12100);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tthis.fontDefDictionary.get(charCacheType).texture.drawTextureAt(texture, this._x, this._y);\r\n\r\n\t\tthis._dirty = true;\r\n\r\n\t\tconst letterDefinition = new FontLetterDefinition();\r\n\t\tletterDefinition.u = this._x + this._halfBleed;\r\n\t\tletterDefinition.v = this._y + this._halfBleed;\r\n\t\tletterDefinition.texture = this.fontDefDictionary.get(charCacheType).texture;\r\n\t\tletterDefinition.valid = true;\r\n\t\tletterDefinition.w = letterTexture.width - bleed;\r\n\t\tletterDefinition.h = letterTexture.height - bleed;\r\n\t\tletterDefinition.xAdvance = letterDefinition.w;\r\n\t\tletterDefinition.offsetY = letterTexture.offsetY;\r\n\r\n\t\tthis._x += width + space;\r\n\t\tthis.fontDefDictionary.get(charCacheType).addLetterDefinitions(letterTexture.hash, letterDefinition);\r\n\r\n\t\tthis.fontDefDictionary.get(charCacheType)._x = this._x;\r\n\t\tthis.fontDefDictionary.get(charCacheType)._y = this._y;\r\n\t\tthis.fontDefDictionary.get(charCacheType)._nextY = this._nextY;\r\n\t\t/*\r\n        const region = new BufferTextureCopy();\r\n        region.texOffset.x = letterDefinition.offsetX;\r\n        region.texOffset.y = letterDefinition.offsetY;\r\n        region.texExtent.width = letterDefinition.w;\r\n        region.texExtent.height = letterDefinition.h;\r\n        */\r\n\r\n\t\treturn letterDefinition;\r\n\t}\r\n\r\n\tpublic update() {\r\n\t\tif (!this._dirty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// this.texture.update();\r\n\t\tthis._dirty = false;\r\n\t}\r\n\r\n\tpublic reset() {\r\n\t\tthis._x = space;\r\n\t\tthis._y = space;\r\n\t\tthis._nextY = space;\r\n\r\n\t\t// const chars = this.letterDefinitions;\r\n\t\t// for (let i = 0, l = (Object.keys(chars)).length; i < l; i++) {\r\n\t\t//     const char = chars[i];\r\n\t\t//     if (!char.valid) {\r\n\t\t//         continue;\r\n\t\t//     }\r\n\t\t//     char.destroy();\r\n\t\t// }\r\n\r\n\t\t// this.letterDefinitions = createMap();\r\n\t\tfor (let value of this.fontDefDictionary.values()) {\r\n\t\t\tvalue.clear();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy() {\r\n\t\tthis.reset();\r\n\t\tfor (let value of this.fontDefDictionary.values()) {\r\n\t\t\tvalue.texture.destroy();\r\n\t\t\tvalue.texture.texture = null;\r\n\t\t}\r\n\t\tthis.fontDefDictionary.clear();\r\n\t}\r\n\r\n\tgetTexture(charCacheType) {\r\n\t\tif (!charCacheType) charCacheType = this._charCacheType;\r\n\t\tif (this.fontDefDictionary.has(charCacheType)) {\r\n\t\t\treturn this.fontDefDictionary.get(charCacheType).getTexture();\r\n\t\t}\r\n\t\treturn this.fontDefDictionary.get(this._charCacheType).getTexture();\r\n\t}\r\n\r\n\tpublic beforeSceneLoad() {\r\n\t\tthis.clearAllCache();\r\n\t}\r\n\r\n\tpublic clearAllCache() {\r\n\t\tthis.destroy();\r\n\r\n\t\tfor (let value of this.fontDefDictionary.values()) {\r\n\t\t\tconst texture = new LetterRenderTexture();\r\n\t\t\ttexture.initWithSize(this._width, this._height);\r\n\t\t\tvalue.texture.texture = texture;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getLetter(key: string, charCacheType) {\r\n\t\tif (!charCacheType) charCacheType = this._charCacheType;\r\n\t\treturn this.fontDefDictionary.get(charCacheType).letterDefinitions[key];\r\n\t}\r\n\r\n\tpublic getLetterDefinitionForChar(char: string, labelInfo: ILabelInfo, charCacheType) {\r\n\t\tif (!this.fontDefDictionary.has(charCacheType)) {\r\n\t\t\tconst texture = new LetterRenderTexture();\r\n\t\t\ttexture.initWithSize(this.width, this.height);\r\n\t\t\tthis.fontDefDictionary.set(charCacheType, new FontAtlas(texture));\r\n\t\t}\r\n\t\tthis._x = this.fontDefDictionary.get(charCacheType)._x;\r\n\t\tthis._y = this.fontDefDictionary.get(charCacheType)._y;\r\n\t\tthis._nextY = this.fontDefDictionary.get(charCacheType)._nextY;\r\n\t\tconst hash = char.charCodeAt(0) + labelInfo.hash;\r\n\t\tlet letter = this.fontDefDictionary.get(charCacheType).letterDefinitions[hash];\r\n\t\tif (!letter) {\r\n\t\t\tconst temp = new LetterTexture(char, labelInfo);\r\n\t\t\ttemp.updateRenderData();\r\n\t\t\tletter = this.insertLetterTexture(temp, charCacheType);\r\n\t\t\ttemp.destroy();\r\n\t\t}\r\n\t\t// console.log(this.fontDefDictionary)\r\n\t\treturn letter;\r\n\t}\r\n}\r\n\r\nexport interface IShareLabelInfo {\r\n\tfontAtlas: FontAtlas | LetterAtlas | null;\r\n\tfontSize: number;\r\n\tlineHeight: number;\r\n\thAlign: number;\r\n\tvAlign: number;\r\n\thash: string;\r\n\tfontFamily: string;\r\n\tfontDesc: string;\r\n\tcolor: Color;\r\n\tisOutlined: boolean;\r\n\tout: Color;\r\n\tmargin: number;\r\n}\r\n\r\nexport const shareLabelInfo: IShareLabelInfo = {\r\n\tfontAtlas: null,\r\n\tfontSize: 0,\r\n\tlineHeight: 0,\r\n\thAlign: 0,\r\n\tvAlign: 0,\r\n\thash: \"\",\r\n\tfontFamily: \"\",\r\n\tfontDesc: \"Arial\",\r\n\tcolor: Color.WHITE.clone(),\r\n\tisOutlined: false,\r\n\tout: Color.WHITE.clone(),\r\n\tmargin: 0,\r\n};\r\n\r\nexport function computeHash(labelInfo) {\r\n\tconst hashData = \"\";\r\n\tconst color = labelInfo.color.toHEX();\r\n\tlet out = \"\";\r\n\tif (labelInfo.isOutlined && labelInfo.margin > 0) {\r\n\t\tout = out + labelInfo.margin + labelInfo.out.toHEX();\r\n\t}\r\n\r\n\treturn hashData + labelInfo.fontSize + labelInfo.fontFamily + color + out;\r\n}\r\n\r\nexport class BufferTextureCopy {\r\n\tprivate declare _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n\tconstructor(public buffStride: number = 0, public buffTexHeight: number = 0, public texOffset: Offset = new Offset(), public texExtent: Extent = new Extent(), public texSubres: TextureSubresLayers = new TextureSubresLayers()) {}\r\n\r\n\tpublic copy(info: BufferTextureCopy) {\r\n\t\tthis.buffStride = info.buffStride;\r\n\t\tthis.buffTexHeight = info.buffTexHeight;\r\n\t\tthis.texOffset.copy(info.texOffset);\r\n\t\tthis.texExtent.copy(info.texExtent);\r\n\t\tthis.texSubres.copy(info.texSubres);\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport class Offset {\r\n\tprivate declare _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n\tconstructor(public x: number = 0, public y: number = 0, public z: number = 0) {}\r\n\r\n\tpublic copy(info: Offset) {\r\n\t\tthis.x = info.x;\r\n\t\tthis.y = info.y;\r\n\t\tthis.z = info.z;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport class Extent {\r\n\tprivate declare _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n\tconstructor(public width: number = 0, public height: number = 0, public depth: number = 1) {}\r\n\r\n\tpublic copy(info: Extent) {\r\n\t\tthis.width = info.width;\r\n\t\tthis.height = info.height;\r\n\t\tthis.depth = info.depth;\r\n\t\treturn this;\r\n\t}\r\n}\r\nexport class TextureSubresLayers {\r\n\tprivate declare _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n\tconstructor(public mipLevel: number = 0, public baseArrayLayer: number = 0, public layerCount: number = 1) {}\r\n\r\n\tpublic copy(info: TextureSubresLayers) {\r\n\t\tthis.mipLevel = info.mipLevel;\r\n\t\tthis.baseArrayLayer = info.baseArrayLayer;\r\n\t\tthis.layerCount = info.layerCount;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport class FontAtlas {\r\n\tpublic letterDefinitions;\r\n\tpublic texture;\r\n\tpublic _x = space;\r\n\tpublic _y = space;\r\n\tpublic _nextY = space;\r\n\r\n\tconstructor(texture) {\r\n\t\tthis.letterDefinitions = {};\r\n\t\tthis.texture = texture;\r\n\t\tthis._x = 0;\r\n\t\tthis._y = 0;\r\n\t\tthis._nextY = 0;\r\n\t}\r\n\r\n\tpublic addLetterDefinitions(letter, letterDefinition) {\r\n\t\tthis.letterDefinitions[letter] = letterDefinition;\r\n\t}\r\n\r\n\tpublic cloneLetterDefinition() {\r\n\t\tconst copyLetterDefinitions = {};\r\n\t\tfor (const key of Object.keys(this.letterDefinitions)) {\r\n\t\t\tconst value = new FontLetterDefinition();\r\n\t\t\tjs.mixin(value, this.letterDefinitions[key]);\r\n\t\t\tcopyLetterDefinitions[key] = value;\r\n\t\t}\r\n\t\treturn copyLetterDefinitions;\r\n\t}\r\n\r\n\tpublic getTexture() {\r\n\t\treturn this.texture;\r\n\t}\r\n\r\n\tpublic getLetter(key) {\r\n\t\treturn this.letterDefinitions[key];\r\n\t}\r\n\r\n\tpublic getLetterDefinitionForChar(char, labelInfo?) {\r\n\t\tconst key = char.charCodeAt(0);\r\n\t\tconst hasKey = this.letterDefinitions.hasOwnProperty(key);\r\n\t\tlet letter;\r\n\t\tif (hasKey) {\r\n\t\t\tletter = this.letterDefinitions[key];\r\n\t\t} else {\r\n\t\t\tletter = null;\r\n\t\t}\r\n\t\treturn letter;\r\n\t}\r\n\r\n\tpublic clear() {\r\n\t\tthis.letterDefinitions = {};\r\n\t}\r\n}\r\n"]}