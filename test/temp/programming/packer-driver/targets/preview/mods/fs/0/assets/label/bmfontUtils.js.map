{"version":3,"sources":["file:///Users/edz/work/creatorproject/3.3.1/test/assets/label/bmfontUtils.ts"],"names":["dynamicAtlasManager","HorizontalTextAlignment","isUnicodeCJK","isUnicodeSpace","log","Overflow","Rect","Size","Vec2","VerticalTextAlignment","ECharCacheType","shareLabelInfo","LetterInfo","_tmpRect","_comp","_uiTrans","_horizontalKerning","_lettersInfo","_linesWidth","_linesOffsetX","_labelDimensions","_lineBreakWithoutSpaces","_contentSize","letterPosition","_lineSpacing","_fntConfig","_numberOfLines","_textDesiredHeight","_letterOffsetY","_tailoredTopY","_tailoredBottomY","_bmfontScale","_spriteFrame","_string","_fontSize","_originFontSize","_hAlign","_vAlign","_spacingX","_lineHeight","_overflow","_isWrapText","_labelWidth","_labelHeight","_maxLineWidth","_charCacheType","bmfontUtils","updateRenderData","comp","renderData","vertDirty","node","_uiProps","uiTransformComp","_updateFontFamily","_updateProperties","_updateLabelInfo","_updateContent","actualFontSize","setContentSize","uvDirty","markForUpdateRenderData","_resetProperties","_updateFontScale","fontAsset","font","spriteFrame","fntConfig","fontAtlas","fontDefDictionary","get","normal","packToDynamicAtlas","_getShareLabelInfo","hash","margin","string","toString","fontSize","horizontalAlign","verticalAlign","spacingX","overflow","contentSize","width","height","NONE","RESIZE_HEIGHT","enableWrapText","lineHeight","_setupBMFontOverflowMetrics","_computeHorizontalKerningForText","_alignText","stringLen","length","kerningDict","horizontalKerning","prev","i","key","charCodeAt","kerningAmount","_multilineTextWrap","nextTokenFunc","textLen","lineIndex","nextTokenX","nextTokenY","longestLine","letterRight","highestY","lowestY","letterDef","index","character","charAt","push","_getFontScale","_recordPlaceholderInfo","tokenLen","tokenHighestY","tokenLowestY","tokenRight","nextLetterX","newLine","tmp","letterIndex","getLetterDefinitionForChar","charCacheType","console","atlasName","letterX","offsetX","w","x","y","offsetY","_recordLetterInfo","xAdvance","h","parseFloat","toFixed","_getFirstCharLen","SHRINK","_getFirstWordLen","text","startIndex","len","_multilineTextWrapByWord","_multilineTextWrapByChar","char","tmpInfo","valid","line","getLetter","_computeAlignmentOffset","_isVerticalClamp","_shrinkLabelToContentSize","_updateQuads","_isHorizontalClamp","_scaleFontSizeDown","shouldUpdateContent","lambda","left","right","mid","newFontSize","letterClamp","ctr","l","letterInfo","px","wordWidth","_isHorizontalClamped","letterOverClamp","texture","getTexture","dataLength","vertexCount","indicesCount","anchorPoint","appX","appY","ret","warn","u","v","py","clipTop","CLAMP","isRotated","_determineRect","letterPositionX","appendQuad","rect","rotated","scale","originalSize","getOriginalSize","getRect","offset","getOffset","trimmedLeft","trimmedTop","originalX","LEFT","CENTER","RIGHT","TOP","blank","BOTTOM","newWidth","newHeight"],"mappings":"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","sourcesContent":["/*\r\n Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated engine source code (the \"Software\"), a limited,\r\n worldwide, royalty-free, non-assignable, revocable and non-exclusive license\r\n to use Cocos Creator solely to develop games on your target platforms. You shall\r\n not use Cocos Creator software for developing other software or tools that's\r\n used for developing games. You are not granted to publish, distribute,\r\n sublicense, and/or sell copies of Cocos Creator.\r\n\r\n The software or tools in this License Agreement are licensed, not sold.\r\n Xiamen Yaji Software Co., Ltd. reserves all rights not expressly granted to you.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { dynamicAtlasManager, error, HorizontalTextAlignment, isUnicodeCJK, isUnicodeSpace, Label, log, Overflow, Rect, Size, SpriteFrame, UITransform, Vec2, VerticalTextAlignment } from \"cc\";\r\n\r\nimport { ECharCacheType, shareLabelInfo } from \"./font-utils\";\r\n\r\n/**\r\n * @packageDocumentation\r\n * @hidden\r\n */\r\n\r\nclass LetterInfo {\r\n\tpublic char = \"\";\r\n\tpublic valid = true;\r\n\tpublic x = 0;\r\n\tpublic y = 0;\r\n\tpublic line = 0;\r\n\tpublic hash = \"\";\r\n}\r\n\r\nconst _tmpRect = new Rect();\r\n\r\nlet _comp: Label | null = null;\r\nlet _uiTrans: UITransform | null = null;\r\n\r\nconst _horizontalKerning: number[] = [];\r\nconst _lettersInfo: LetterInfo[] = [];\r\nconst _linesWidth: number[] = [];\r\nconst _linesOffsetX: number[] = [];\r\nconst _labelDimensions = new Size();\r\nconst _lineBreakWithoutSpaces = false;\r\nconst _contentSize = new Size();\r\nconst letterPosition = new Vec2();\r\nconst _lineSpacing = 0;\r\n\r\nlet _fntConfig = null;\r\nlet _numberOfLines = 0;\r\nlet _textDesiredHeight = 0;\r\nlet _letterOffsetY = 0;\r\nlet _tailoredTopY = 0;\r\nlet _tailoredBottomY = 0;\r\nlet _bmfontScale = 1.0;\r\nlet _spriteFrame: SpriteFrame | null = null;\r\nlet _string = \"\";\r\nlet _fontSize = 0;\r\nlet _originFontSize = 0;\r\nlet _hAlign = 0;\r\nlet _vAlign = 0;\r\nlet _spacingX = 0;\r\nlet _lineHeight = 0;\r\nlet _overflow = 0;\r\nlet _isWrapText = false;\r\nlet _labelWidth = 0;\r\nlet _labelHeight = 0;\r\nlet _maxLineWidth = 0;\r\nlet _charCacheType = null;\r\n\r\nexport const bmfontUtils = {\r\n\tupdateRenderData(comp: Label) {\r\n\t\tif (!comp.renderData || !comp.renderData.vertDirty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (_comp === comp) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_comp = comp;\r\n\t\t_uiTrans = _comp.node._uiProps.uiTransformComp!;\r\n\t\tthis._updateFontFamily(comp);\r\n\t\tthis._updateProperties(comp);\r\n\t\tthis._updateLabelInfo(comp);\r\n\t\tthis._updateContent(comp);\r\n\r\n\t\t_comp.actualFontSize = _fontSize;\r\n\t\t_uiTrans.setContentSize(_contentSize);\r\n\r\n\t\t_comp.renderData!.vertDirty = _comp.renderData!.uvDirty = false;\r\n\t\t// fix bmfont run updateRenderData twice bug\r\n\t\t_comp.markForUpdateRenderData(false);\r\n\r\n\t\t_comp = null;\r\n\r\n\t\tthis._resetProperties();\r\n\t},\r\n\r\n\t_updateFontScale() {\r\n\t\t_bmfontScale = _fontSize / _originFontSize;\r\n\t},\r\n\r\n\t_updateFontFamily(comp) {\r\n\t\tconst fontAsset = comp.font;\r\n\t\tlog(\"_updateFontFamily=========>\", fontAsset);\r\n\t\t_spriteFrame = fontAsset.spriteFrame;\r\n\t\t_fntConfig = fontAsset.fntConfig;\r\n\t\tshareLabelInfo.fontAtlas = fontAsset.fontDefDictionary.get(ECharCacheType.normal);\r\n\r\n\t\tdynamicAtlasManager.packToDynamicAtlas(comp, _spriteFrame);\r\n\t},\r\n\t/**获取当前的fontAtlas */\r\n\t_getShareLabelInfo() {\r\n\t\treturn shareLabelInfo;\r\n\t},\r\n\t_updateLabelInfo() {\r\n\t\t// clear\r\n\t\tshareLabelInfo.hash = \"\";\r\n\t\tshareLabelInfo.margin = 0;\r\n\t},\r\n\r\n\t_updateProperties(comp) {\r\n\t\t_string = comp.string.toString();\r\n\t\t_fontSize = comp.fontSize;\r\n\t\t_originFontSize = _fntConfig ? _fntConfig.fontSize : comp.fontSize;\r\n\t\t_hAlign = comp.horizontalAlign;\r\n\t\t_vAlign = comp.verticalAlign;\r\n\t\t_spacingX = comp.spacingX;\r\n\t\t_overflow = comp.overflow;\r\n\t\t_lineHeight = comp._lineHeight;\r\n\t\t_charCacheType = comp._charCacheType;\r\n\t\t// console.log(_charCacheType)\r\n\t\tconst contentSize = _uiTrans!.contentSize;\r\n\t\t_contentSize.width = contentSize.width;\r\n\t\t_contentSize.height = contentSize.height;\r\n\r\n\t\t// should wrap text\r\n\t\tif (_overflow === Overflow.NONE) {\r\n\t\t\t_isWrapText = false;\r\n\t\t\t_contentSize.width += shareLabelInfo.margin * 2;\r\n\t\t\t_contentSize.height += shareLabelInfo.margin * 2;\r\n\t\t} else if (_overflow === Overflow.RESIZE_HEIGHT) {\r\n\t\t\t_isWrapText = true;\r\n\t\t\t_contentSize.height += shareLabelInfo.margin * 2;\r\n\t\t} else {\r\n\t\t\t_isWrapText = comp.enableWrapText;\r\n\t\t}\r\n\r\n\t\tshareLabelInfo.lineHeight = _lineHeight;\r\n\t\tshareLabelInfo.fontSize = _fontSize;\r\n\r\n\t\tthis._setupBMFontOverflowMetrics();\r\n\t},\r\n\r\n\t_resetProperties() {\r\n\t\t_fntConfig = null;\r\n\t\t_spriteFrame = null;\r\n\t\tshareLabelInfo.hash = \"\";\r\n\t\tshareLabelInfo.margin = 0;\r\n\t},\r\n\r\n\t_updateContent(comp) {\r\n\t\tthis._updateFontScale();\r\n\t\tthis._computeHorizontalKerningForText();\r\n\t\tthis._alignText(comp);\r\n\t},\r\n\r\n\t_computeHorizontalKerningForText() {\r\n\t\tconst string = _string;\r\n\t\tconst stringLen = string.length;\r\n\r\n\t\tconst kerningDict = _fntConfig!.kerningDict;\r\n\t\tconst horizontalKerning = _horizontalKerning;\r\n\r\n\t\tlet prev = -1;\r\n\t\tfor (let i = 0; i < stringLen; ++i) {\r\n\t\t\tconst key = string.charCodeAt(i);\r\n\t\t\tconst kerningAmount = kerningDict[(prev << 16) | (key & 0xffff)] || 0;\r\n\t\t\tif (i < stringLen - 1) {\r\n\t\t\t\thorizontalKerning[i] = kerningAmount;\r\n\t\t\t} else {\r\n\t\t\t\thorizontalKerning[i] = 0;\r\n\t\t\t}\r\n\t\t\tprev = key;\r\n\t\t}\r\n\t},\r\n\r\n\t_multilineTextWrap(nextTokenFunc: Function, comp) {\r\n\t\tconst textLen = _string.length;\r\n\r\n\t\tlet lineIndex = 0;\r\n\t\tlet nextTokenX = 0;\r\n\t\tlet nextTokenY = 0;\r\n\t\tlet longestLine = 0;\r\n\t\tlet letterRight = 0;\r\n\r\n\t\tlet highestY = 0;\r\n\t\tlet lowestY = 0;\r\n\t\tlet letterDef = null;\r\n\r\n\t\tfor (let index = 0; index < textLen; ) {\r\n\t\t\tlet character = _string.charAt(index);\r\n\t\t\tif (character === \"\\n\") {\r\n\t\t\t\t_linesWidth.push(letterRight);\r\n\t\t\t\tletterRight = 0;\r\n\t\t\t\tlineIndex++;\r\n\t\t\t\tnextTokenX = 0;\r\n\t\t\t\tnextTokenY -= _lineHeight * this._getFontScale() + _lineSpacing;\r\n\t\t\t\tthis._recordPlaceholderInfo(index, character);\r\n\t\t\t\tindex++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst tokenLen = nextTokenFunc(_string, index, textLen,comp);\r\n\t\t\tlet tokenHighestY = highestY;\r\n\t\t\tlet tokenLowestY = lowestY;\r\n\t\t\tlet tokenRight = letterRight;\r\n\t\t\tlet nextLetterX = nextTokenX;\r\n\t\t\tlet newLine = false;\r\n\r\n\t\t\tfor (let tmp = 0; tmp < tokenLen; ++tmp) {\r\n\t\t\t\tconst letterIndex = index + tmp;\r\n\t\t\t\tcharacter = _string.charAt(letterIndex);\r\n\t\t\t\tif (character === \"\\r\") {\r\n\t\t\t\t\tthis._recordPlaceholderInfo(letterIndex, character);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tletterDef = shareLabelInfo.fontAtlas!.getLetterDefinitionForChar(character, shareLabelInfo, comp.charCacheType);\r\n\t\t\t\tif (!letterDef) {\r\n\t\t\t\t\tthis._recordPlaceholderInfo(letterIndex, character);\r\n\t\t\t\t\tconsole.log(`Can't find letter definition in texture atlas ${_fntConfig!.atlasName} for letter:${character}`);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst letterX = nextLetterX + letterDef.offsetX * _bmfontScale - shareLabelInfo.margin;\r\n\r\n\t\t\t\tif (_isWrapText && _maxLineWidth > 0 && nextTokenX > 0 && letterX + letterDef.w * _bmfontScale > _maxLineWidth && !isUnicodeSpace(character)) {\r\n\t\t\t\t\t_linesWidth.push(letterRight);\r\n\t\t\t\t\tletterRight = 0;\r\n\t\t\t\t\tlineIndex++;\r\n\t\t\t\t\tnextTokenX = 0;\r\n\t\t\t\t\tnextTokenY -= _lineHeight * this._getFontScale() + _lineSpacing;\r\n\t\t\t\t\tnewLine = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tletterPosition.x = letterX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tletterPosition.y = nextTokenY - letterDef.offsetY * _bmfontScale;\r\n\t\t\t\tthis._recordLetterInfo(letterPosition, character, letterIndex, lineIndex, comp);\r\n\r\n\t\t\t\tif (letterIndex + 1 < _horizontalKerning.length && letterIndex < textLen - 1) {\r\n\t\t\t\t\tnextLetterX += _horizontalKerning[letterIndex + 1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextLetterX += letterDef.xAdvance * _bmfontScale + _spacingX;\r\n\r\n\t\t\t\ttokenRight = letterPosition.x + letterDef.w * _bmfontScale;\r\n\r\n\t\t\t\tif (tokenHighestY < letterPosition.y) {\r\n\t\t\t\t\ttokenHighestY = letterPosition.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (tokenLowestY > letterPosition.y - letterDef.h * _bmfontScale) {\r\n\t\t\t\t\ttokenLowestY = letterPosition.y - letterDef.h * _bmfontScale;\r\n\t\t\t\t}\r\n\t\t\t} // end of for loop\r\n\r\n\t\t\tif (newLine) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tnextTokenX = nextLetterX;\r\n\t\t\tletterRight = tokenRight;\r\n\r\n\t\t\tif (highestY < tokenHighestY) {\r\n\t\t\t\thighestY = tokenHighestY;\r\n\t\t\t}\r\n\t\t\tif (lowestY > tokenLowestY) {\r\n\t\t\t\tlowestY = tokenLowestY;\r\n\t\t\t}\r\n\t\t\tif (longestLine < letterRight) {\r\n\t\t\t\tlongestLine = letterRight;\r\n\t\t\t}\r\n\r\n\t\t\tindex += tokenLen;\r\n\t\t} // end of for loop\r\n\r\n\t\t_linesWidth.push(letterRight);\r\n\r\n\t\t_numberOfLines = lineIndex + 1;\r\n\t\t_textDesiredHeight = _numberOfLines * _lineHeight * this._getFontScale();\r\n\t\tif (_numberOfLines > 1) {\r\n\t\t\t_textDesiredHeight += (_numberOfLines - 1) * _lineSpacing;\r\n\t\t}\r\n\r\n\t\t_contentSize.width = _labelWidth;\r\n\t\t_contentSize.height = _labelHeight;\r\n\t\tif (_labelWidth <= 0) {\r\n\t\t\t_contentSize.width = parseFloat(longestLine.toFixed(2)) + shareLabelInfo.margin * 2;\r\n\t\t}\r\n\t\tif (_labelHeight <= 0) {\r\n\t\t\t_contentSize.height = parseFloat(_textDesiredHeight.toFixed(2)) + shareLabelInfo.margin * 2;\r\n\t\t}\r\n\r\n\t\t_tailoredTopY = _contentSize.height;\r\n\t\t_tailoredBottomY = 0;\r\n\t\tif (highestY > 0) {\r\n\t\t\t_tailoredTopY = _contentSize.height + highestY;\r\n\t\t}\r\n\t\tif (lowestY < -_textDesiredHeight) {\r\n\t\t\t_tailoredBottomY = _textDesiredHeight + lowestY;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_getFirstCharLen() {\r\n\t\treturn 1;\r\n\t},\r\n\r\n\t_getFontScale() {\r\n\t\treturn _overflow === Overflow.SHRINK ? _bmfontScale : 1;\r\n\t},\r\n\r\n\t_getFirstWordLen(text: string, startIndex: number, textLen: number,comp) {\r\n\t\tlet character = text.charAt(startIndex);\r\n\t\tif (isUnicodeCJK(character) || character === \"\\n\" || isUnicodeSpace(character)) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\tlet len = 1;\r\n\t\tlet letterDef = shareLabelInfo.fontAtlas!.getLetterDefinitionForChar(character, shareLabelInfo, comp.charCacheType);\r\n\t\tif (!letterDef) {\r\n\t\t\treturn len;\r\n\t\t}\r\n\t\tlet nextLetterX = letterDef.xAdvance * _bmfontScale + _spacingX;\r\n\t\tlet letterX = 0;\r\n\t\tfor (let index = startIndex + 1; index < textLen; ++index) {\r\n\t\t\tcharacter = text.charAt(index);\r\n\r\n\t\t\tletterDef = shareLabelInfo.fontAtlas!.getLetterDefinitionForChar(character, shareLabelInfo, comp.charCacheType);\r\n\t\t\tif (!letterDef) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tletterX = nextLetterX + letterDef.offsetX * _bmfontScale;\r\n\r\n\t\t\tif (letterX + letterDef.w * _bmfontScale > _maxLineWidth && !isUnicodeSpace(character) && _maxLineWidth > 0) {\r\n\t\t\t\treturn len;\r\n\t\t\t}\r\n\t\t\tnextLetterX += letterDef.xAdvance * _bmfontScale + _spacingX;\r\n\t\t\tif (character === \"\\n\" || isUnicodeSpace(character) || isUnicodeCJK(character)) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlen++;\r\n\t\t}\r\n\r\n\t\treturn len;\r\n\t},\r\n\r\n\t_multilineTextWrapByWord(comp) {\r\n\t\treturn this._multilineTextWrap(this._getFirstWordLen, comp);\r\n\t},\r\n\r\n\t_multilineTextWrapByChar(comp) {\r\n\t\treturn this._multilineTextWrap(this._getFirstCharLen, comp);\r\n\t},\r\n\r\n\t_recordPlaceholderInfo(letterIndex: number, char: string) {\r\n\t\tif (letterIndex >= _lettersInfo.length) {\r\n\t\t\tconst tmpInfo = new LetterInfo();\r\n\t\t\t_lettersInfo.push(tmpInfo);\r\n\t\t}\r\n\r\n\t\t_lettersInfo[letterIndex].char = char;\r\n\t\t_lettersInfo[letterIndex].hash = char.charCodeAt(0) + shareLabelInfo.hash;\r\n\t\t_lettersInfo[letterIndex].valid = false;\r\n\t},\r\n\r\n\t_recordLetterInfo(letterPosition: Vec2, character: string, letterIndex: number, lineIndex: number, comp?) {\r\n\t\tif (letterIndex >= _lettersInfo.length) {\r\n\t\t\tconst tmpInfo = new LetterInfo();\r\n\t\t\t_lettersInfo.push(tmpInfo);\r\n\t\t}\r\n\r\n\t\tconst char = character.charCodeAt(0);\r\n\t\tconst key = char + shareLabelInfo.hash;\r\n\r\n\t\t_lettersInfo[letterIndex].line = lineIndex;\r\n\t\t_lettersInfo[letterIndex].char = character;\r\n\t\t_lettersInfo[letterIndex].hash = key;\r\n\t\t_lettersInfo[letterIndex].valid = shareLabelInfo.fontAtlas!.getLetter(key, comp.charCacheType).valid;\r\n\t\t_lettersInfo[letterIndex].x = letterPosition.x;\r\n\t\t_lettersInfo[letterIndex].y = letterPosition.y;\r\n\t},\r\n\r\n\t_alignText(comp) {\r\n\t\t_textDesiredHeight = 0;\r\n\t\t_linesWidth.length = 0;\r\n\r\n\t\tif (!_lineBreakWithoutSpaces) {\r\n\t\t\tthis._multilineTextWrapByWord(comp);\r\n\t\t} else {\r\n\t\t\tthis._multilineTextWrapByChar(comp);\r\n\t\t}\r\n\r\n\t\tthis._computeAlignmentOffset();\r\n\r\n\t\t// shrink\r\n\t\tif (_overflow === Overflow.SHRINK) {\r\n\t\t\tif (_fontSize > 0 && this._isVerticalClamp()) {\r\n\t\t\t\tthis._shrinkLabelToContentSize(this._isVerticalClamp, comp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._updateQuads(comp)) {\r\n\t\t\tif (_overflow === Overflow.SHRINK) {\r\n\t\t\t\tthis._shrinkLabelToContentSize(this._isHorizontalClamp, comp);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_scaleFontSizeDown(fontSize: number, comp) {\r\n\t\tlet shouldUpdateContent = true;\r\n\t\tif (!fontSize) {\r\n\t\t\tfontSize = 0.1;\r\n\t\t\tshouldUpdateContent = false;\r\n\t\t}\r\n\t\t_fontSize = fontSize;\r\n\r\n\t\tif (shouldUpdateContent) {\r\n\t\t\tthis._updateContent(comp);\r\n\t\t}\r\n\t},\r\n\r\n\t_shrinkLabelToContentSize(lambda: Function, comp) {\r\n\t\tconst fontSize = _fontSize;\r\n\r\n\t\tlet left = 0;\r\n\t\tlet right = fontSize | 0;\r\n\t\tlet mid = 0;\r\n\t\twhile (left < right) {\r\n\t\t\tmid = (left + right + 1) >> 1;\r\n\r\n\t\t\tconst newFontSize = mid;\r\n\t\t\tif (newFontSize <= 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t_bmfontScale = newFontSize / _originFontSize;\r\n\r\n\t\t\tif (!_lineBreakWithoutSpaces) {\r\n\t\t\t\tthis._multilineTextWrapByWord(comp);\r\n\t\t\t} else {\r\n\t\t\t\tthis._multilineTextWrapByChar(comp);\r\n\t\t\t}\r\n\t\t\tthis._computeAlignmentOffset();\r\n\r\n\t\t\tif (lambda(comp)) {\r\n\t\t\t\tright = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\tleft = mid;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (left >= 0) {\r\n\t\t\tthis._scaleFontSizeDown(left, comp);\r\n\t\t}\r\n\t},\r\n\r\n\t_isVerticalClamp() {\r\n\t\tif (_textDesiredHeight > _contentSize.height) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\t_isHorizontalClamp(comp) {\r\n\t\tlet letterClamp = false;\r\n\t\tfor (let ctr = 0, l = _string.length; ctr < l; ++ctr) {\r\n\t\t\tconst letterInfo = _lettersInfo[ctr];\r\n\t\t\tif (letterInfo.valid) {\r\n\t\t\t\tconst letterDef = shareLabelInfo.fontAtlas!.getLetterDefinitionForChar(letterInfo.char, shareLabelInfo, comp.charCacheType);\r\n\t\t\t\tif (!letterDef) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst px = letterInfo.x + (letterDef.w / 2) * _bmfontScale;\r\n\t\t\t\tconst lineIndex = letterInfo.line;\r\n\t\t\t\tif (_labelWidth > 0) {\r\n\t\t\t\t\tif (!_isWrapText) {\r\n\t\t\t\t\t\tif (px > _contentSize.width) {\r\n\t\t\t\t\t\t\tletterClamp = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst wordWidth = _linesWidth[lineIndex];\r\n\t\t\t\t\t\tif (wordWidth > _contentSize.width && (px > _contentSize.width || px < 0)) {\r\n\t\t\t\t\t\t\tletterClamp = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn letterClamp;\r\n\t},\r\n\r\n\t_isHorizontalClamped(px: number, lineIndex: number) {\r\n\t\tconst wordWidth = _linesWidth[lineIndex];\r\n\t\tconst letterOverClamp = px > _contentSize.width || px < 0;\r\n\r\n\t\tif (!_isWrapText) {\r\n\t\t\treturn letterOverClamp;\r\n\t\t} else {\r\n\t\t\treturn wordWidth > _contentSize.width && letterOverClamp;\r\n\t\t}\r\n\t},\r\n\r\n\t_updateQuads(comp) {\r\n\t\tif (!_comp) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst texture = _spriteFrame ? _spriteFrame.texture : shareLabelInfo.fontAtlas!.getTexture(comp.charCacheType);\r\n\t\tconst renderData = _comp.renderData!;\r\n\t\trenderData.dataLength = renderData.vertexCount = renderData.indicesCount = 0;\r\n\t\tconst anchorPoint = _uiTrans!.anchorPoint;\r\n\t\tconst contentSize = _contentSize;\r\n\t\tconst appX = anchorPoint.x * contentSize.width;\r\n\t\tconst appY = anchorPoint.y * contentSize.height;\r\n\r\n\t\tlet ret = true;\r\n\t\tfor (let ctr = 0, l = _string.length; ctr < l; ++ctr) {\r\n\t\t\tconst letterInfo = _lettersInfo[ctr];\r\n\t\t\tif (!letterInfo.valid) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst letterDef = shareLabelInfo.fontAtlas!.getLetter(letterInfo.hash, comp.charCacheType);\r\n\t\t\tif (!letterDef) {\r\n\t\t\t\tconsole.warn(\"Can't find letter in this bitmap-font\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t_tmpRect.height = letterDef.h;\r\n\t\t\t_tmpRect.width = letterDef.w;\r\n\t\t\t_tmpRect.x = letterDef.u;\r\n\t\t\t_tmpRect.y = letterDef.v;\r\n\r\n\t\t\tlet py = letterInfo.y + _letterOffsetY;\r\n\r\n\t\t\tif (_labelHeight > 0) {\r\n\t\t\t\tif (py > _tailoredTopY) {\r\n\t\t\t\t\tconst clipTop = py - _tailoredTopY;\r\n\t\t\t\t\t_tmpRect.y += clipTop;\r\n\t\t\t\t\t_tmpRect.height -= clipTop;\r\n\t\t\t\t\tpy -= clipTop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (py - letterDef.h * _bmfontScale < _tailoredBottomY && _overflow === Overflow.CLAMP) {\r\n\t\t\t\t\t_tmpRect.height = py < _tailoredBottomY ? 0 : (py - _tailoredBottomY) / _bmfontScale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst lineIndex = letterInfo.line;\r\n\t\t\tconst px = letterInfo.x + (letterDef.w / 2) * _bmfontScale + _linesOffsetX[lineIndex];\r\n\r\n\t\t\tif (_labelWidth > 0) {\r\n\t\t\t\tif (this._isHorizontalClamped(px, lineIndex)) {\r\n\t\t\t\t\tif (_overflow === Overflow.CLAMP) {\r\n\t\t\t\t\t\t_tmpRect.width = 0;\r\n\t\t\t\t\t} else if (_overflow === Overflow.SHRINK) {\r\n\t\t\t\t\t\tif (_contentSize.width > letterDef.w) {\r\n\t\t\t\t\t\t\tret = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t_tmpRect.width = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (_tmpRect.height > 0 && _tmpRect.width > 0) {\r\n\t\t\t\tconst isRotated = this._determineRect();\r\n\t\t\t\tconst letterPositionX = letterInfo.x + _linesOffsetX[letterInfo.line];\r\n\t\t\t\tthis.appendQuad(_comp, texture, _tmpRect, isRotated, letterPositionX - appX, py - appY, _bmfontScale);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tappendQuad(comp, texture, rect, rotated, x, y, scale) {},\r\n\r\n\t_determineRect() {\r\n\t\tconst isRotated = _spriteFrame!.isRotated();\r\n\r\n\t\tconst originalSize = _spriteFrame!.getOriginalSize();\r\n\t\tconst rect = _spriteFrame!.getRect();\r\n\t\tconst offset = _spriteFrame!.getOffset();\r\n\t\tconst trimmedLeft = offset.x + (originalSize.width - rect.width) / 2;\r\n\t\tconst trimmedTop = offset.y - (originalSize.height - rect.height) / 2;\r\n\r\n\t\tif (!isRotated) {\r\n\t\t\t_tmpRect.x += rect.x - trimmedLeft;\r\n\t\t\t_tmpRect.y += rect.y + trimmedTop;\r\n\t\t} else {\r\n\t\t\tconst originalX = _tmpRect.x;\r\n\t\t\t_tmpRect.x = rect.x + rect.height - _tmpRect.y - _tmpRect.height - trimmedTop;\r\n\t\t\t_tmpRect.y = originalX + rect.y - trimmedLeft;\r\n\t\t\tif (_tmpRect.y < 0) {\r\n\t\t\t\t_tmpRect.height += trimmedTop;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn isRotated;\r\n\t},\r\n\r\n\t_computeAlignmentOffset() {\r\n\t\t_linesOffsetX.length = 0;\r\n\r\n\t\tswitch (_hAlign) {\r\n\t\t\tcase HorizontalTextAlignment.LEFT:\r\n\t\t\t\tfor (let i = 0; i < _numberOfLines; ++i) {\r\n\t\t\t\t\t_linesOffsetX.push(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase HorizontalTextAlignment.CENTER:\r\n\t\t\t\tfor (let i = 0, l = _linesWidth.length; i < l; i++) {\r\n\t\t\t\t\t_linesOffsetX.push((_contentSize.width - _linesWidth[i]) / 2);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase HorizontalTextAlignment.RIGHT:\r\n\t\t\t\tfor (let i = 0, l = _linesWidth.length; i < l; i++) {\r\n\t\t\t\t\t_linesOffsetX.push(_contentSize.width - _linesWidth[i]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// TOP\r\n\t\t_letterOffsetY = _contentSize.height;\r\n\t\tif (_vAlign !== VerticalTextAlignment.TOP) {\r\n\t\t\tconst blank = _contentSize.height - _textDesiredHeight + _lineHeight * this._getFontScale() - _originFontSize * _bmfontScale;\r\n\t\t\tif (_vAlign === VerticalTextAlignment.BOTTOM) {\r\n\t\t\t\t// BOTTOM\r\n\t\t\t\t_letterOffsetY -= blank;\r\n\t\t\t} else {\r\n\t\t\t\t// CENTER:\r\n\t\t\t\t_letterOffsetY -= blank / 2;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_setupBMFontOverflowMetrics() {\r\n\t\tlet newWidth = _contentSize.width;\r\n\t\tlet newHeight = _contentSize.height;\r\n\r\n\t\tif (_overflow === Overflow.RESIZE_HEIGHT) {\r\n\t\t\tnewHeight = 0;\r\n\t\t}\r\n\r\n\t\tif (_overflow === Overflow.NONE) {\r\n\t\t\tnewWidth = 0;\r\n\t\t\tnewHeight = 0;\r\n\t\t}\r\n\r\n\t\t_labelWidth = newWidth;\r\n\t\t_labelHeight = newHeight;\r\n\t\t_labelDimensions.width = newWidth;\r\n\t\t_labelDimensions.height = newHeight;\r\n\t\t_maxLineWidth = newWidth;\r\n\t},\r\n};\r\n\r\nexport default bmfontUtils;\r\n"]}