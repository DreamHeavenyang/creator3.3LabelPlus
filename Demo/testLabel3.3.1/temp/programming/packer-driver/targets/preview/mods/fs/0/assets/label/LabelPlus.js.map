{"version":3,"sources":["file:///Users/edz/work/creatorproject/3.3.1/test/assets/label/LabelPlus.ts"],"names":["_decorator","Label","BitmapFont","CacheMode","SpriteFrame","ImageAsset","Texture2D","Enum","ECharCacheType","ccclass","property","LabelPlus","type","tooltip","normal","_applyFontTexture","markForUpdateRenderData","font","_font","spriteFrame","texture","_texture","changeMaterialForDefine","_assembler","updateRenderData","cacheMode","CHAR","_letterTexture","getAssemblerData","_ttfSpriteFrame","_assemblerData","image","canvas","_charCacheType","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA0CC,MAAAA,I,OAAAA,I;;AAC9HC,MAAAA,c,iBAAAA,c;;;;;;;AACDC,MAAAA,O,GAAsBT,U,CAAtBS,O;AAASC,MAAAA,Q,GAAaV,U,CAAbU,Q;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;2BAEaC,S,WADZF,OAAO,CAAC,WAAD,C,UAINC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL,IAAI;AAAA;AAAA,6CAAZ;AAA8BM,QAAAA,OAAO,EAAE;AAAvC,OAAD,C;;;;;;;;;;;;2EADgC;AAAA;AAAA,gDAAeC,M;;;;;;;AAUxD;eACUC,iB,GAAV,6BAA8B;AAC7B,eAAKC,uBAAL;AACA,cAAMC,IAAI,GAAG,KAAKC,KAAlB;;AACA,cAAID,IAAI,YAAYf,UAApB,EAAgC;AAC/B,gBAAMiB,WAAW,GAAGF,IAAI,CAACE,WAAzB;;AACA,gBAAIA,WAAW,IAAIA,WAAW,CAACC,OAA/B,EAAwC;AACvC,mBAAKC,QAAL,GAAgBF,WAAhB;AACA,mBAAKG,uBAAL;;AACA,kBAAI,KAAKC,UAAT,EAAqB;AACpB,qBAAKA,UAAL,CAAgBC,gBAAhB,CAAiC,IAAjC;AACA;AACD;AACD,WATD,MASO;AACN,gBAAI,KAAKC,SAAL,KAAmBtB,SAAS,CAACuB,IAAjC,EAAuC;AACtC,mBAAKC,cAAL,GAAsB,KAAKJ,UAAL,CAAiBK,gBAAjB,CAAkC,IAAlC,CAAtB;AACA,mBAAKP,QAAL,GAAgB,KAAKM,cAArB;AACA,aAHD,MAGO,IAAI,CAAC,KAAKE,eAAV,EAA2B;AACjC,mBAAKA,eAAL,GAAuB,IAAIzB,WAAJ,EAAvB;AACA,mBAAK0B,cAAL,GAAsB,KAAKP,UAAL,CAAiBK,gBAAjB,EAAtB;AACA,kBAAMG,KAAK,GAAG,IAAI1B,UAAJ,CAAe,KAAKyB,cAAL,CAAqBE,MAApC,CAAd;AACA,kBAAMZ,OAAO,GAAG,IAAId,SAAJ,EAAhB;AACAc,cAAAA,OAAO,CAACW,KAAR,GAAgBA,KAAhB;AACA,mBAAKF,eAAL,CAAqBT,OAArB,GAA+BA,OAA/B;AACA;;AAED,gBAAI,KAAKK,SAAL,KAAmBtB,SAAS,CAACuB,IAAjC,EAAuC;AACtC;AACA,mBAAKL,QAAL,GAAgB,KAAKQ,eAArB;AACA;;AACD,iBAAKP,uBAAL;AACA;AACD,S;;;;eAzCD,eAC2C;AAC1C,mBAAO,KAAKW,cAAZ;AACA,W;eACD,aAAyBC,KAAzB,EAAgD;AAC/C,iBAAKD,cAAL,GAAsBC,KAAtB;AACA,iBAAKV,gBAAL;AACA;;;;QAV6BvB,K","sourcesContent":["\r\nimport { _decorator, Component, Node, Label, BitmapFont, CacheMode, SpriteFrame, ImageAsset, Texture2D, dynamicAtlasManager, CCString, Enum, log } from \"cc\";\r\nimport { ECharCacheType } from \"./font-utils\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * 增加char模式下多种类型的缓存Texture\r\n * Name = LabelPlus\r\n * DateTime = Mon Sep 27 2021 10:24:01 GMT+0800 (中国标准时间)\r\n * Author = hellotion\r\n * FileBasename = LabelPlus.ts\r\n * FileBasenameNoExtension = LabelPlus\r\n * URL = db://assets/LabelPlus.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\r\n *\r\n */\r\n@ccclass(\"LabelPlus\")\r\nexport class LabelPlus extends Label {\r\n\t// public charCacheType: ECharCacheType = ECharCacheType.normal;\r\n\tprivate _charCacheType: ECharCacheType = ECharCacheType.normal;\r\n\t@property({ type: Enum(ECharCacheType), tooltip: \"char模式缓存Txture种类\" })\r\n\tpublic get charCacheType(): ECharCacheType {\r\n\t\treturn this._charCacheType;\r\n\t}\r\n\tpublic set charCacheType(value: ECharCacheType) {\r\n\t\tthis._charCacheType = value;\r\n\t\tthis.updateRenderData();\r\n\t}\r\n\r\n\t/** 重写父类，char模式传入此label */\r\n\tprotected _applyFontTexture() {\r\n\t\tthis.markForUpdateRenderData();\r\n\t\tconst font = this._font;\r\n\t\tif (font instanceof BitmapFont) {\r\n\t\t\tconst spriteFrame = font.spriteFrame;\r\n\t\t\tif (spriteFrame && spriteFrame.texture) {\r\n\t\t\t\tthis._texture = spriteFrame;\r\n\t\t\t\tthis.changeMaterialForDefine();\r\n\t\t\t\tif (this._assembler) {\r\n\t\t\t\t\tthis._assembler.updateRenderData(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.cacheMode === CacheMode.CHAR) {\r\n\t\t\t\tthis._letterTexture = this._assembler!.getAssemblerData(this);\r\n\t\t\t\tthis._texture = this._letterTexture;\r\n\t\t\t} else if (!this._ttfSpriteFrame) {\r\n\t\t\t\tthis._ttfSpriteFrame = new SpriteFrame();\r\n\t\t\t\tthis._assemblerData = this._assembler!.getAssemblerData();\r\n\t\t\t\tconst image = new ImageAsset(this._assemblerData!.canvas);\r\n\t\t\t\tconst texture = new Texture2D();\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\tthis._ttfSpriteFrame.texture = texture;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.cacheMode !== CacheMode.CHAR) {\r\n\t\t\t\t// this._frame._refreshTexture(this._texture);\r\n\t\t\t\tthis._texture = this._ttfSpriteFrame;\r\n\t\t\t}\r\n\t\t\tthis.changeMaterialForDefine();\r\n\t\t}\r\n\t}\r\n}\r\n"]}